<!DOCTYPE html>
<HTML manifest___xxx="BiblePad-2015.appcache">

<HEAD>
    <TITLE>cuvs</TITLE>
    <base target="_blank" />
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">




    <script>
        var gStartDate = new Date();
        console.log(gStartDate.toString() + " ------ start load");//
    </script>



    <script language="javascript" src="../../htmjs/jq/jquery.js">
    </script>
    <script language="javascript" src="../../htmjs/jq/table_Indexer.js">
    </script>
    <script language="javascript" src="../../htmjs/jq/jquery.tablesorter.js"></script>


    <script language="javascript" src="../../../jsdb/jsBibleStruct/BBE.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/CUVS.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/H_G.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/KJV.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/NIV.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/PINYIN.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/STUS.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/WLVS.json.js"></script>



    <script src="http://localhost:7778/Jsonpster/"></script>


    </script>








    <script>
        console.log((new Date()).toString());//
    </script>
    <style>
        body {
    background-color: black;
    color: white;
    width:100%;
	font-size: 100%;
	
    padding:0px 0px 0px 0px;
    margin: 0px 0px 0px 0px;	

    font-family: 'Times New Roman';
}
.hili{
    background-color: red; 
}
.searchFile{
    color:blue;
}
sub{
    font-size: 8px;
}


#menuContainer, #menuToggler{
    position:fixed;
    top:10px;
    right: 20px;
    opacity: 100;
    background-color: rgb(51, 158, 158);
}
div[contenteditable]{
    background-color:rgb(40, 49, 70);
}
#BibInputMenuHolder{

}

#chp_tab{
    background-color: green;
}
#vrs_tab{
    background-color:rgb(149, 97, 29);
}

</style>



    <script language="javascript">
        var gBim = null;//

        $(document).ready(function () {
            gBim = new BibleInputMenu("#BibInputMenuHolder", H_G_struct);

            gBim.init();
            gBim.Gen_Keys_Menu();
            $("#menuToggler").click(function () {
                $("#menuContainer").slideToggle();
            });

            $("#load").click(function () {
                var ret = gBim.get_chap_by_selected();
                $("#out").val(JSON.stringify(ret, null, 4));

                restapi_loadBibleObj("test", ret.dat);
            });

            table_sort();
            //table_col_index();
        });/////////////



        const BibVolName = {
            "Gen": ['Genesis', '创世纪'],
            "Exo": ['Exodus', '出埃及记'],
            "Lev": ['Leviticus', '利未记'],
            "Num": ['Numbers', '民数记'],
            "Deu": ['Deuteronomy', '申命记'],
            "Jos": ['Joshua', '约书亚记'],
            "Jug": ['Judges', '士师记'],
            "Rut": ['Ruth', '路得记'],
            "1Sa": ['1_Samuel', '撒母耳记上'],
            "2Sa": ['2_Samuel', '撒母耳记下'],
            "1Ki": ['1_Kings', '列王记上'],
            "2Ki": ['2_Kings', '列王记下'],
            "1Ch": ['1_Chronicles', '历代志上'],
            "2Ch": ['2_Chronicles', '历代志下'],
            "Ezr": ['Ezra', '以斯拉记'],
            "Neh": ['Nehemiah', '尼希米记'],
            "Est": ['Esther', '以斯帖记'],
            "Job": ['Job', '约伯记'],
            "Psm": ['Psalm', '诗篇'],
            "Pro": ['Proverbs', '箴言'],
            "Ecc": ['Ecclesiastes', '传道书'],
            "Son": ['SongOfSolomon', '雅歌'],
            "Isa": ['Isaiah', '以赛亚书'],
            "Jer": ['Jeremiah', '耶利米书'],
            "Lam": ['Lamentations', '耶利米哀歌'],
            "Eze": ['Ezekiel', '以西结书'],
            "Dan": ['Daniel', '但以理书'],
            "Hos": ['Hosea', '何西阿书'],
            "Joe": ['Joel', '约珥书'],
            "Amo": ['Amos', '阿摩司书'],
            "Oba": ['Obadiah', '俄巴底亚书'],
            "Jon": ['Jonah', '约拿书'],
            "Mic": ['Micah', '弥迦书'],
            "Nah": ['Nahum', '那鸿书'],
            "Hab": ['Habakkuk', '哈巴谷书'],
            "Zep": ['Zephaniah', '西番雅书'],
            "Hag": ['Haggai', '哈该书'],
            "Zec": ['Zechariah', '撒迦利亚'],
            "Mal": ['Malachi', '玛拉基书'],
            "Mat": ['Matthew', '马太福音'],
            "Mak": ['Mark', '马可福音'],
            "Luk": ['Luke', '路加福音'],
            "Jhn": ['John', '约翰福音'],
            "Act": ['Acts', '使徒行传'],
            "Rom": ['Romans', '罗马书'],
            "1Co": ['1_Corinthians', '哥林多前书'],
            "2Co": ['2_Corinthians', '哥林多后书'],
            "Gal": ['Galatians', '加拉太书'],
            "Eph": ['Ephesians', '以弗所书'],
            "Phl": ['Philippians', '腓立比书'],
            "Col": ['Colossians', '歌罗西书'],
            "1Ts": ['1_Thessalonians', '帖撒罗尼迦前书'],
            "2Ts": ['2_Thessalonians', '帖撒罗尼迦后书'],
            "1Ti": ['1_Timothy', '提摩太前书'],
            "2Ti": ['2_Timothy', '提摩太后书'],
            "Tit": ['Titus', '提多书'],
            "Phm": ['Philemon', '腓利门书'],
            "Heb": ['Hebrews', '希伯来书'],
            "Jas": ['James', '雅各书'],
            "1Pe": ['1_Peter', '彼得前书'],
            "2Pe": ['2_Peter', '彼得后书'],
            "1Jn": ['1_John', '约翰一书'],
            "2Jn": ['2_John', '约翰二书'],
            "3Jn": ['3_John', '约翰三书'],
            "Jud": ['Jude', '犹大书'],
            "Rev": ['Revelation', '启示录'],
        };
        var BibleInputMenu = function (menuId, Obj) {
            this.m_menuHolderId = menuId;

            this.m_keytbid = "#key_bdy";
            this.m_voltbid = "#vol_bdy";
            this.m_chptbid = "#chp_bdy";
            this.m_vrstbid = "#vrs_tbd";

            this.m_structObj = Obj;
            this.m_bknArr = ["BBE", "CUVS", "H_G", "KJV", "NIV", "PINYIN", "STUS", "WLVS", "_notes"];
        }
        BibleInputMenu.prototype.init = function () {
            var stables = `
        <div id="BibleInputMenuContainer">   
        <table border="0">
            <caption id="">Bible Input Keys<a id='vname'></a></caption>
            <thead id="inoutkeyhdr"></thead>
            <tbody id='key_bdy'></tbody>
        </table>
        <table border="1" style="float:left;">
            <caption class='bbbCap' id='bkn_cap' title='Biblical Book Name'>BKN</caption>
            <thead id="bkn_hdr"></thead>
            <tbody id='bkn_bdy'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>

        <table border="1" style="float:left;">
            <caption class='vcvCap' id='vol_cap'>Vol</caption>
            <thead id="vol_hdr"></thead>
            <tbody id='vol_bdy'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>

        <table id='chp_tab' border="1" style="float:left;">
            <caption class='vcvCap' id='chp_cap'>__chapters__</caption>
            <thead id="chp_hdr"></thead>
            <tbody id='chp_bdy'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>
        <a style="float:left;">:</a>

        <table id="vrs_tab" border="1" style="float:left;">
            <caption class='vcvCap' id='vrs_cap'>Verses</caption>
            <thead id="vrs_hdr"></thead>
            <tbody id='vrs_tbd'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>


        <table border="1" style="float:left;">
            <caption><button id="loadVolChpVrs" onclick='restapi_loadBibVolChpVrs();' title='Load Bible'>Load</button>
        </caption>
            <thead></thead>
            <tbody>
                <tr>
                    <td>
                       <select id="sel_history" multiple size='15'><option/></select><br>
                       <button id="loadhistory" onclick='loadBible_history(1);' title='load history sort by time'>H</button>
                       <button id="sort_history_by_vcvID"  onclick='loadBible_history(0);' title='sort by str'>^</button>
                    </td>
                </tr>
            </tbody>
        </table>


        <table border="1" style="float:left;">
            <caption id='selvcv'>-
        </caption>
            <thead></thead>
            <tbody>
                <tr>
                    <td id='refpop'>
                       
                       
                    </td>
                </tr>
            </tbody>
        </table>
        </div>
        
        <textarea id="out" cols='50'></textarea><br>
        
        <button onclick="BibleObj_search();" title="search on svr">search</button>
        <button onclick="regex_match_next();" title="find on page">match</button>
        <br>
        <a id="searchResult" onclick="load_search_string_history();" title='load search history.'>search result...<a><br>
        <select id="regex_history_lst" size='15'><option/></select>
        
        <br>`;

            if ("undefined" === typeof Jsonpster) {
                alert("Jsonpster server failed.");
            }
            $(this.m_menuHolderId).prepend(stables);

            var str = "";
            $.each(this.m_bknArr, function (i, v) {
                var hil = "";
                if (i == 2) hil = "hili";
                str += "<tr><td class='cbkn " + hil + "'>" + v + "</td></tr>";
            });
            $("#bkn_bdy").html(str).find(".cbkn").bind("click", function () {
                //$(".cbkn").removeClass("hili");
                $(this).toggleClass("hili");

                $(".searchFile").removeClass("searchFile");
                $(this).toggleClass("searchFile");

                $("#searchFile").text($(this).text());
            });





        }
        BibleInputMenu.prototype.get_vol_trs_match_str = function (ch) {
            function get_vol_arr(bbObj, ch) {
                var arr = [];
                Object.keys(bbObj).forEach(function (vol) {
                    if (vol.indexOf(ch) == 0) {
                        arr.push(vol);
                    };
                });
                return arr;
            }
            var trarr = [];
            var volarr = get_vol_arr(this.m_structObj, ch);
            var cls = " class='v3' ";
            if (volarr.length == 1) cls = " class='v3 hili' ";
            volarr.forEach(function (vol) {
                //<td align='right'>"+BibVolName[vol][0]+"</td>
                trarr.push("<tr><td/><td" + cls + "title='" + BibVolName[vol] + "'>" + vol + "</td></tr>");
            });
            return trarr;
        };

        BibleInputMenu.prototype.Fresh_Caption_Txt = function () {
            var inp = this.get_chap_by_selected();
            var ret = inp.dat;
            if (!ret.vol) ret.vol = "-";
            if (!ret.chp) ret.chp = "-";
            if (!ret.vrs) ret.vrs = "-";
            $("#vol_cap").text(ret.vol);
            $("#chp_cap").text(ret.chp);
            $("#vrs_cap").text(ret.vrs);
        }

        BibleInputMenu.prototype.Gen_Keys_Menu = function () {
            var ks = this.get_cha_arr_after_str(this.m_structObj, "");

            var s = "<tr id='vitr'>";
            var _This = this;
            $.each(ks, function (i, c) {
                var trs = _This.get_vol_trs_match_str(c);
                var ssb = "<sub>" + trs.length + "</sub>";
                if (trs.length === 1) ssb = "";
                c = c + ssb;
                s += "<td><button class='vin'>" + c + "</button></td>";
                if (9 == i) s += "</tr><tr>";
            });
            s += "</tr>";

            $(_This.m_keytbid).html(s).find(".vin").bind("click", function () {
                $(".vin").removeClass("hili");
                $(this).addClass("hili");
                var ch = $(this).text();

                $(_This.m_chptbid).html("");
                $(_This.m_vrstbid).html("");
                $(".vcvCap").text(".");

                var ret = _This.get_vol_trs_match_str(ch[0]);
                $(_This.m_voltbid).html(ret.join("")).find(".v3").bind("click", function () {
                    var vol = $(this).text();
                    $(".v3").removeClass("hili");
                    $(this).addClass("hili");
                    _This.Fresh_Caption_Txt();
                    //$("#out").val(vol);
                    $(_This.m_vrstbid).html("");
                    _This.gen_Chap_Menu(_This.m_structObj[vol]);
                });
                if (ret.length === 1) {
                    restapi_loadBibVolChpVrs();
                }
            });
            return ks;
        }

        BibleInputMenu.prototype.get_cha_arr_after_str = function (obj, str) {
            if (!obj) return [];
            var ret = {};
            Object.keys(obj).forEach(function (v) {
                if (v.indexOf(str) == 0) {
                    var idx = str.length;
                    if (v.length > idx) {
                        var ch = v[idx];
                        if (!ret[ch]) ret[ch] = 0;
                        ret[ch]++;
                    }
                }
            });
            var ks = Object.keys(ret).sort();
            return ks;
        }
        BibleInputMenu.prototype.get_chap_by_selected = function () {
            var fnamesArr = [];
            $(".cbkn.hili").each(function () {
                var ss = $(this).text();
                fnamesArr.push(ss);
            });
            if (fnamesArr.length == 0) {
                alert("Err: no bookname selected.");
            }
            //
            var searchFileName = $(".cbkn.hili.searchFile").text();
            var searchStrn = $("#out").val();

            var vol = $(".v3.hili").text();

            var chparr = ["", "", ""];
            chparr[0] = $(this.m_chptbid).find(".chpos0.hili").text().charAt(0);
            chparr[1] = $(this.m_chptbid).find(".chpos1.hili").text().charAt(0);
            chparr[2] = $(this.m_chptbid).find(".chpos2.hili").text().charAt(0);

            var arr = ["", "", ""];
            arr[0] = $(this.m_vrstbid).find(".chpos0.hili").text().charAt(0);
            arr[1] = $(this.m_vrstbid).find(".chpos1.hili").text().charAt(0);
            arr[2] = $(this.m_vrstbid).find(".chpos2.hili").text().charAt(0);



            var dat = { vol: vol, chp: chparr.join(""), vrs: arr.join(""), searchFile: searchFileName, searchStrn: searchStrn };
            var ret = { fname: fnamesArr, dat: dat };
            ret.validateBibleLoad = function () {
                if (this.fname.length === 0) {
                    alert("Please select a biblical BooK Name.");
                    return false;
                }
                if ((this.dat.vol && this.dat.vol.length > 0)) {
                    return true;
                }
                var s = JSON.stringify(this);
                s += "\n\n no vol,chp,vrs. Load whole Bible?";
                return confirm(s);
            };
            ret.validateSearch = function () {
                if (!this.dat.searchFile) {
                    alert("no searchFile");
                    return false;
                }
                if (this.dat.searchStrn.length == 0) {
                    alert("no searchStrn");
                    return false;
                }
                return true;
            }
            ret.getApiParam = function (sApiName) {
                return { api: sApiName, inp: this };
            }
            return ret;
        }




        BibleInputMenu.prototype.digi_table_init = function (tid) {
            var maxchp = "000";// + Object.keys(uobj).length;
            var n = maxchp.length;

            var s = "";
            for (var i = 0; i < 10; i++) {
                s += "<tr>";
                for (var k = 0; k < n; k++) {
                    s += "<td class='chpos" + k + "' chprow='" + i + "' chpcol='" + k + "'>" + "</td>";
                }
                s += "</tr>";
            };
            var chpTab = $(tid).html(s);
            return chpTab;
        };


        BibleInputMenu.prototype.digi_table_fill_col = function (tid, uobj, icol, prevStrn) {
            var _This = this;
            var curAr = _This.get_cha_arr_after_str(uobj, prevStrn);
            $(tid).find(".chpos" + icol).each(function (i) {
                var row = $(this).attr("chprow");
                var irow = parseInt(row);
                if (curAr[irow]) {
                    var ch = curAr[irow];
                    var nexAr = _This.get_cha_arr_after_str(uobj, prevStrn + ch);
                    var ssub = "" + nexAr.length;
                    if (nexAr.length === 0) ssub = "&nbsp;&nbsp;&nbsp;";
                    $(this).html(ch + "<sub>" + ssub + "</sub>");
                } else {
                    $(this).text("");
                }
            });
        };
        BibleInputMenu.prototype.chp_table_bind_col = function (tid, uobj, icol, cbfunc) {
            var _This = this;
            $(tid).find(".chpos" + icol).bind("click", function () {
                var ss = $(this).text();
                if (ss.length === 0) return;

                for (var i = icol; i < 3; i++) {
                    $(tid).find(".chpos" + i).removeClass("hili");
                }

                $(this).addClass("hili");
                _This.Fresh_Caption_Txt();


                var ssrch = cbfunc();
                _This.digi_table_fill_col(tid, uobj, 1 + icol, ssrch);

                if (Object.keys(uobj[ssrch]).length == 0) return;
                _This.gen_verse_Menu(uobj[ssrch]);
            });
        }
        BibleInputMenu.prototype.gen_Chap_Menu = function (vobj) {
            var _This = this;
            function get_search_str_by_hili() {
                var ret = _This.get_chap_by_selected();
                return ret.dat.chp;
            }
            //var vobj = BsObj[Vol];
            this.digi_table_init(this.m_chptbid);
            this.digi_table_fill_col(this.m_chptbid, vobj, 0, "");
            this.chp_table_bind_col(this.m_chptbid, vobj, 0, get_search_str_by_hili);
            this.chp_table_bind_col(this.m_chptbid, vobj, 1, get_search_str_by_hili);
            this.chp_table_bind_col(this.m_chptbid, vobj, 2, get_search_str_by_hili);

        };

        BibleInputMenu.prototype.gen_verse_Menu = function (vobj) {
            var _This = this;
            function get_search_str_by_hili() {
                var ret = _This.get_chap_by_selected();
                console.log(ret);
                return ret.dat.vrs;
            }
            //var vobj = BsObj[Vol];
            this.digi_table_init(this.m_vrstbid);
            this.digi_table_fill_col(this.m_vrstbid, vobj, 0, "");
            this.chp_table_bind_col(this.m_vrstbid, vobj, 0, get_search_str_by_hili);
            this.chp_table_bind_col(this.m_vrstbid, vobj, 1, get_search_str_by_hili);
            this.chp_table_bind_col(this.m_vrstbid, vobj, 2, get_search_str_by_hili);
        };

        ///////////
        //////////
        //////////
        //////////
        /////////
        var VerseRefMenu = function () {

        }


        ///////////
        //////////
        //////////
        //////////
        /////////
        var BlueLetterBibleCode = {
            "Gen": "Gen",
            "Exo": "Exo",
            "Lev": "Lev",
            "Num": "Num",
            "Deu": "Deu",
            "Jos": "Jos",
            "Jug": "Jug",
            "Rut": "Rut",
            "1Sa": "1Sa",
            "2Sa": "2Sa",
            "1Ki": "1Ki",
            "2Ki": "2Ki",
            "1Ch": "1Ch",
            "2Ch": "2Ch",
            "Ezr": "Ezr",
            "Neh": "Neh",
            "Est": "Est",
            "Job": "Job",
            "Psm": "Psa",//
            "Pro": "Pro",
            "Ecc": "Ecc",
            "Son": "Son",
            "Isa": "Isa",
            "Jer": "Jer",
            "Lam": "Lam",
            "Eze": "Eze",
            "Dan": "Dan",
            "Hos": "Hos",
            "Joe": "Joe",
            "Amo": "Amo",
            "Oba": "Oba",
            "Jon": "Jon",
            "Mic": "Mic",
            "Nah": "Nah",
            "Hab": "Hab",
            "Zep": "Zep",
            "Hag": "Hag",
            "Zec": "Zec",
            "Mal": "Mal",
            "Mat": "Mat",
            "Mak": "Mak",
            "Luk": "Luk",
            "Jhn": "Jhn",
            "Act": "Act",
            "Rom": "Rom",
            "1Co": "1Co",
            "2Co": "2Co",
            "Gal": "Gal",
            "Eph": "Eph",
            "Phl": "Phl",
            "Col": "Col",
            "1Ts": "1Ts",
            "2Ts": "2Ts",
            "1Ti": "1Ti",
            "2Ti": "2Ti",
            "Tit": "Tit",
            "Phm": "Phm",
            "Heb": "Heb",
            "Jas": "Jas",
            "1Pe": "1Pe",
            "2Pe": "2Pe",
            "1Jn": "1Jn",
            "2Jn": "2Jn",
            "3Jn": "3Jn",
            "Jud": "Jud",
            "Rev": "Rev",
        };//BookChapterVerseMax
        function regex_match_next() {
            var str = $("#out").val();
            var reg = new RegExp(str, "g");
            $("a[vid]").each(function () {
                var ss = $(this).text();
                var mat = ss.match(reg);
                if (mat) {
                    $.each(mat, function (i, v) {
                        if (0 == i) {
                            ss = ss.replace(v, "<font color='red'>" + v + "</font>");
                        }
                    });
                    $(this).html(ss).prev().attr("checked", true);
                };
            });
        };

        function restapi_loadBibVolChpVrs_genTable(ret) {
            function on_editing() {
                var txt = $(this).html();
                var vid = $(this).attr("vid");
                var mat = vid.match(/^(\w{3})(\d+)\:(\d+)$/);
                var dat = {}
                if (mat) {
                    dat.vol = mat[1];
                    dat.chp = mat[2];
                    dat.vrs = mat[3];
                };
                dat.txt = txt;
                var inp = { fname: ["_notes"], dat: dat };
                var par = { api: "BibleObj_update_notes", inp: inp };
                Jsonpster.Run(par, function () {
                    jsonpsvr_ok();
                });
            };
            function gen_table(ret) {
                var s = "<table border='1'>";
                var idx = 0;
                $.each(ret, function (vol, chpObj) {
                    $.each(chpObj, function (chp, vrsObj) {
                        $.each(vrsObj, function (vrs, val) {
                            //console.log("typeof val=", typeof val);
                            var vid = vol + "<br>" + chp + ":" + vrs;
                            s += "<tr><td>" + (++idx) + "</td><td class='vid'>" + vid + "</td><td>";
                            if ("object" == typeof val) {
                                $.each(val, function (key, str) {
                                    var vid = vol + chp + ":" + vrs;
                                    s += "<div><input type='checkbox' title='" + key + "'/><a vid='" + vid + "'>" + str + "</a></div>";
                                });
                            }
                            if ("string" == typeof val) {
                                s += "<div>" + val + "</iv>";
                            }
                            s += "</td></tr>";
                        });
                    });
                });
                s += "</table>";
                return { htm: s, size: idx };
            }
            var inpobj = gBim.get_chap_by_selected();
            var fnamAr = inpobj.fname;
            const cidx = fnamAr.indexOf("_notes");
            console.log(ret);
            var tb = gen_table(ret);
            $("#searchResult").text("size=" + tb.size);
            $("#oBible").html(tb.htm);
            $("#oBible").find(".vid").bind("click", function () {
                var vid = $(this).text();
                var mat = vid.match(/^(\w{3})(\d+)\:(\d+)$/);
                var blb = BlueLetterBibleCode[mat[1]];
                $(this).toggleClass("hili");
                $("#selvcv").text(vid).toggleClass("hili");


                //https://www.blueletterbible.org/kjv/gen/1/1/s_1001
                var srf = "<a href='https://www.blueletterbible.org/kjv/" + blb + "/" + mat[2] + "/" + mat[3] + "'>blb</a> | ";
                //https://www.blueletterbible.org/kjv/gen/1/1/s_1001
                srf += "<a href='https://www.blueletterbible.org/kjv/" + blb + "/" + mat[2] + "/" + mat[3] + "'>blb</a> ";
                $("#refpop").html(srf);
                //alert(vid);
            });
            $("#oBible").find("[type=checkbox]").bind("click", function () {
                if ($(this).attr("title") === "_notes") {
                    if ($(this).prop("checked"))
                        $(this).next().attr("contenteditable", "true").addClass("hili").bind("keyup", on_editing);
                    else {
                        $(this).next().removeClass("hili").attr("contenteditable", null);
                    }
                }
            });
        }
        function BibleObj_search() {
            var s = $("#out").val().trim();
            var inp = gBim.get_chap_by_selected();
            if (!inp.validateSearch()) return;
            console.log(inp);
            var par = { api: "loadBible_Bkns_VolChpVrs", inp: inp };
            par = inp.getApiParam("loadBible_Bkns_VolChpVrs");

            Jsonpster.Run(par, restapi_loadBibVolChpVrs_genTable);

            console.log(Jsonpster);

        }
        function restapi_loadBibVolChpVrs() {
            var inp = gBim.get_chap_by_selected();
            if (!inp.validateBibleLoad()) return;
            console.log(inp);
            var par = { api: "loadBible_Bkns_VolChpVrs", inp: inp };
            par = inp.getApiParam("loadBible_Bkns_VolChpVrs");

            Jsonpster.Run(par, restapi_loadBibVolChpVrs_genTable);

            console.log(Jsonpster);
        };

        function loadBible_history(bSortByTime) {
            var inp = { fname: [], dat: {} };
            var prm = { api: "loadBible_read_history", inp: inp };
            Jsonpster.Run(prm, function (ret) {
                //history
                console.log(ret);
                var ops = [];
                $.each(ret, function (vol, chobj) {
                    $.each(chobj, function (chp, vrsObj) {
                        $.each(vrsObj, function (vrs, ob) {

                            var dtm = "";
                            if (bSortByTime) dtm = ob.dtime;
                            var str = vol + " " + chp + " : " + vrs;
                            ops.push("<option time='" + dtm + "'>" + str + " &nbsp;&nbsp;&nbsp;&nbsp;</option>");

                        });
                    });
                });

                if (bSortByTime) {
                    ops.sort().reverse();
                }
                else {
                    ops.sort();
                }

                $("#sel_history").html(ops.join("")).find("option").bind("click", function () {
                    var s = $(this).text();
                    var mat = s.match(/^(\w{3})\s+(\d+)\s+[\:]\s+(\d+)\s+$/);
                    if (mat) {
                        console.log(mat);
                        var dat = { vol: mat[1], chp: mat[2], vrs: mat[3] };
                        var ret = gBim.get_chap_by_selected();
                        var inp = { fname: ret.fname, dat: dat };
                        console.log(inp);

                        var par = { api: "loadBible_Bkns_VolChpVrs", inp: inp };

                        Jsonpster.Run(par, restapi_loadBibVolChpVrs_genTable);
                    }
                });

            });
        }
        function load_search_string_history(bSortByTime) {
            var inp = { fname: ["search_history"], dat: {} };
            var prm = { api: "loadBible_read_regex_search_history", inp: inp };
            Jsonpster.Run(prm, function (ret) {
                //history
                console.log(ret);
                var ops = [];
                $.each(ret, function (vol, chobj) {
                    $.each(chobj, function (chp, vrsObj) {
                        $.each(vrsObj, function (vrs, ob) {
                            $.each(ob, function (searchStr, tm) {
                                ops.push("<option time='" + tm + "'>" + searchStr + " &nbsp;&nbsp;&nbsp;&nbsp;</option>");
                            });
                        });
                    });
                });

                if (bSortByTime) {
                    ops.sort().reverse();
                }
                else {
                    ops.sort();
                }

                $("#regex_history_lst").html(ops.join("")).find("option").bind("click", function () {
                    var s = $(this).text().trim();
                    $("#out").val(s);
                });

            });
        }



        function jsonpsvr_ok() {
            //https://www.w3schools.com/js/js_json_jsonp.asp
            var s = $("#out").val();
            if (s.length > 10) s = "";
            $("#texta").val(s + ".");
        }

    </script>

</HEAD>

<BODY>





    <div id="menuContainer">
        <div id="BibInputMenuHolder" height="100%">
        </div>



        <button id="indxer">indxer</button>
        <button id="load">load</button>

        <table border="1">
            <thead>
                <tr>
                    <td>#</td>
                    <td>Vol</td>
                    <td>Chp</td>
                    <td>Ver</td>
                </tr>
            </thead>
            <tbody id="StructAna"></tbody>
        </table>
    </div>
    <button id='menuToggler'>-</button>

    <hr />
    <span id='oBible'>----</span>

</BODY>

</HTML>
<script type="text/javascript">

</script>
<!DOCTYPE html>
<HTML manifest___xxx="BiblePad-2015.appcache">

<HEAD>
    <TITLE>cuvs</TITLE>
    <base target="_blank" />
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">




    <script>
        var gStartDate = new Date();
        console.log(gStartDate.toString() + " ------ start load");//
    </script>



    <script language="javascript" src="../../htmjs/jq/jquery.js">
    </script>
    <script language="javascript" src="../../htmjs/jq/table_Indexer.js">
    </script>
    <script language="javascript" src="../../htmjs/jq/jquery.tablesorter.js"></script>


    <script language="javascript" src="../../../jsdb/jsBibleStruct/BBE.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/CUVS.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/H_G.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/KJV.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/NIV.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/PINYIN.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/STUS.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/WLVS.json.js"></script>



    <script src="http://localhost:7778/Jsonpster/"></script>


    </script>




    c



    <script>
        console.log((new Date()).toString());//
    </script>
    <style>
        body {
    background-color: black;
    color: white;
    width:100%;
	font-size: 100%;
	
    padding:0px 0px 0px 0px;
    margin: 0px 0px 0px 0px;	

    font-family: 'Times New Roman';
}
.hili{
    background-color: red; 
}
.mat{
    background-color: chartreuse;
    color:black;
}
.matIndex{
    border: 5px solid red;
}
.searchFile{
    color:blue;
}
sub{
    font-size: 8px;
}


#menuContainer, #menuToggler{
    position:fixed;
    top:10px;
    right: 20px;
    opacity: 100;
    background-color: rgb(51, 158, 158);
}
div[contenteditable]{
    background-color:rgb(40, 49, 70);
}
#BibInputMenuHolder{

}

#chp_tab{
    background-color: green;
}
#vrs_tab{
    background-color:rgb(149, 97, 29);
}
#oBiblex table{width:10000px; }
#oBible table thead tr{ display:block; }
#oBible table tbody { height:1500px; overflow-y:scroll; display:block; }

#tmpsel2ref thead{ display:block; }
#tmpsel2ref tbody { height:180px; overflow-y:scroll; display:block; }

</style>



    <script language="javascript">
        var gBim = null;//

        $(document).ready(function () {
            gBim = new BibleInputMenu("#BibInputMenuHolder", H_G_struct);

            gBim.init();
            gBim.initCat();
            gBim.Gen_Keys_Menu();
            gBim.digi_table_init("#chp_bdy",150);
            gBim.digi_table_init("#vrs_tbd",176);
            $("#menuToggler").click(function () {
                $("#menuContainer").slideToggle();
            });

            $("#load").click(function () {
                var ret = gBim.get_chap_by_selected();
                $("#out").val(JSON.stringify(ret, null, 4));

                restapi_loadBibleObj("test", ret.dat);
            });

            table_sort();
            //table_col_index();
        });/////////////




        var BibleInputMenu = function (menuId, Obj) {
            this.m_menuHolderId = menuId;

            this.m_keytbid = "#key_bdy";
            this.m_voltbid = "#vol_bdy";
            this.m_chptbid = "#chp_bdy";
            this.m_vrstbid = "#vrs_tbd";

            this.m_cattbid = "#cat_bdy";

            this.m_structObj = Obj;
            this.m_bknArr = ["BBE", "CUVS", "H_G", "KJV", "NIV", "PINYIN", "STUS", "WLVS", "_notes"];
            this.m_catArr = ["Tora","History","Lite","MajorP","MinorP","Gospel","Pauline","Epistles"];
        }
        BibleInputMenu.prototype.init = function () {
            if ("undefined" === typeof Jsonpster) {
                alert("Jsonpster server failed.");
            }
            $(this.m_menuHolderId).prepend(BibleInputMenuContainer);

            var str = "";
            $.each(this.m_bknArr, function (i, v) {
                var hil = "";
                if (i == 2) hil = "hili";
                str += "<tr><td class='cbkn " + hil + "'>" + v + "</td></tr>";
            });
            $("#bkn_bdy").html(str).find(".cbkn").bind("click", function () {
                //$(".cbkn").removeClass("hili");
                $(this).toggleClass("hili");

                $(".searchFile").removeClass("searchFile");
                $(this).toggleClass("searchFile");

                $("#searchFile").text($(this).text());
            });
        };
        BibleInputMenu.prototype.initCat = function () {
            var s="";
            $.each(this.m_catArr,function(i,v){
                s+="<tr><td class='cat'>"+v+"</td></tr>";
            });
            $(this.m_cattbid).html(s).find(".cat").bind("click",function(){
                $(this).toggleClass("hili");
            });
        };
        BibleInputMenu.prototype.get_vol_trs_match_str = function (ch) {
            function get_vol_arr(bbObj, ch) {
                var arr = [];
                Object.keys(bbObj).forEach(function (vol) {
                    if (vol.indexOf(ch) == 0) {
                        arr.push(vol);
                    };
                });
                return arr;
            }
            var trarr = [];
            var volarr = get_vol_arr(this.m_structObj, ch);
            var cls = " class='v3 hili' ";
            volarr.forEach(function (vol) {
                //<td align='right'>"+BibVolName[vol][0]+"</td>
                trarr.push("<tr><td/><td" + cls + "title='" + BibVolName[vol] + "'>" + vol + "</td></tr>");
                cls = " class='v3' ";
            });
            return { volarr: volarr, trs: trarr.join("") };
        };
        BibleInputMenu.prototype.Gen_Keys_Menu = function () {
            var ks = this.get_cha_arr_after_str(this.m_structObj, "");

            var s = "<tr id='vitr'>";
            var _This = this;
            $.each(ks, function (i, c) {
                var ret = _This.get_vol_trs_match_str(c);
                var ssb = "<sub>" + ret.volarr.length + "</sub>";
                if (ret.volarr.length === 1) ssb = "";
                c = c + ssb;
                s += "<td><button class='vin'>" + c + "</button></td>";
                if (9 == i) s += "</tr><tr>";
            });
            s += "</tr>";

            $(_This.m_keytbid).html(s).find(".vin").bind("click", function () {
                $(".vin").removeClass("hili");
                $(this).addClass("hili");
                var ch = $(this).text();

                var ret = _This.get_vol_trs_match_str(ch[0]);
                $("#vol_cap").text(ret.volarr[0]);
                $("#BibleInput").text(BibVolName[ret.volarr[0]]);
                $(_This.m_voltbid).html(ret.trs).find(".v3").bind("click", function () {
                    var vol = $(this).text();
                    $(".v3").removeClass("hili");
                    $(this).addClass("hili");
                    $("#vol_cap").text(vol);
                    $("#BibleInput").text(BibVolName[vol]);
                });
            });
            return ks;
        };

        BibleInputMenu.prototype.get_cha_arr_after_str = function (obj, str) {
            if (!obj) return [];
            var ret = {};
            Object.keys(obj).forEach(function (v) {
                if (v.indexOf(str) == 0) {
                    var idx = str.length;
                    if (v.length > idx) {
                        var ch = v[idx];
                        if (!ret[ch]) ret[ch] = 0;
                        ret[ch]++;
                    }
                }
            });
            var ks = Object.keys(ret).sort();
            return ks;
        }
        BibleInputMenu.prototype.get_chap_by_selected = function () {
            var fnamesArr = [];
            $(".cbkn.hili").each(function () {
                var ss = $(this).text();
                fnamesArr.push(ss);
            });
            if (fnamesArr.length == 0) {
                alert("Err: no bookname selected.");
            }
            //
            var searchFileName = $(".cbkn.hili.searchFile").text();
            var searchStrn = $("#out").val();

            var vol = $(".v3.hili").text();
            var chp = $("#chp_cap").text();
            var vrs = $("#vrs_cap").text();
            function validate_vcv(vol, chp, vrs) {
                if (undefined == H_G_struct[vol]) return alert("fatal err");
                else if (undefined == H_G_struct[vol][chp]) {
                    var ichp = parseInt(chp);
                    if (Number.isInteger(ichp)) {
                        var max = Object.keys(H_G_struct[vol]).length;
                        if (parseInt(chp) > max) {
                            return alert("input chp="+chp+":\n"+vol + " max chapter is " + max);
                        }
                    }

                }
                else if (undefined == H_G_struct[vol][chp][vrs]) {
                    var ivrs = parseInt(vrs);
                    if (Number.isInteger(ivrs)) {
                        var max = Object.keys(H_G_struct[vol][chp]).length;
                        if (parseInt(vrs) >= max) {
                            return alert("input vrs="+vrs+":\n"+vol + " " + chp + " max verse is " + max);
                        }
                    }

                }
                return true;
            }


            var dat = { vol: vol, chp: chp, vrs: vrs, searchFile: searchFileName, searchStrn: searchStrn };
            var ret = { fname: fnamesArr, dat: dat };

            ret.validateBibleLoad = function () {
                if (!validate_vcv(this.dat.vol, this.dat.chp, this.dat.vrs)) {
                    return false;
                }
                if (this.fname.length === 0) {
                    alert("Please select a biblical BooK Name.");
                    return false;
                }
                if ((this.dat.vol && this.dat.vol.length > 0)) {
                    return true;
                }
                var s = JSON.stringify(this);
                s += "\n\n no vol,chp,vrs. Load whole Bible?";
                return confirm(s);
            };
            ret.validateSearch = function () {
                if (!this.dat.searchFile) {
                    alert("no searchFile");
                    return false;
                }
                if (this.dat.searchStrn.length == 0) {
                    alert("no searchStrn");
                    return false;
                }
                return true;
            }
            ret.getApiParam = function (sApiName) {
                return { api: sApiName, inp: this };
            }
            return ret;
        };
        BibleInputMenu.prototype.digi_table_init = function (tid, imaxNum) {
            function _td(num) {
                var s = "<td><button class='digit' num='" + num + "'>" + (num) + "</button></td>";
                return s;
            }

            var s = "", num = 1;
            s += "<tr>" + _td(0);
            s += "<th><button class='clear'  title='clear'>c</button></th>";
            s += "<th><button class='undo'  title='undo'>u</button></th>";
            s += "</tr>";
            for (var i = 0; i < 3; i++) {
                s += "<tr>";
                for (var k = 0; k < 3; k++) {
                    s += _td(num++);
                }
                s += "</tr>";
            };

            $(tid).html(s).find("button:contains('0')").attr("disabled",true);
            $(tid).find(".digit").bind("click", function () {
                var num = $(this).text();

                var cap = $(this).parentsUntil("table").parent().find("caption");
                var scap = cap.text();
                if (scap.length >= 3) scap = scap.substr(1);
                var icap = parseInt(scap);
                if (!Number.isInteger(icap)) {
                    icap = 0;
                }
                
                var updateCap = icap * 10 + parseInt(num);
                if(updateCap>imaxNum)updateCap=imaxNum;
                cap.text(updateCap);
                console.log(num);
                
                var inextbase=icap*100;
                if(inextbase>imaxNum){
                    $(tid).find(".digit").attr("disabled",true);
                    return;
                }
                $(tid).find("button[disabled]").attr("disabled",null);
            });
            $(tid).find(".clear").bind("click", function () {
                var cap = $(this).parentsUntil("table").parent().find("caption");
                cap.text("*");
                $(tid).find(".digit").attr("disabled",null);
                $(tid).find("button:contains('0')").attr("disabled",true);

            });
            $(tid).find(".undo").bind("click", function () {
                var cap = $(this).parentsUntil("table").parent().find("caption");
                var str = cap.text();
                if (str.length == 1) {
                    cap.text("*");
                }
                else {
                    str = str.substr(0, str.length - 1);
                    cap.text(str);
                }
                $(tid).find(".digit").attr("disabled",null);

            });
            return;
        };

        ///////////
        //////////
        //////////
        //////////
        /////////
        ///////////
        //////////
        //////////
        //////////
        /////////

        function regex_match_next() {
            var str = $("#out").val();
            var reg = new RegExp(str, "g");

            var matSize = $(".mat").length;
            if (matSize > 0 && str === document.g_matchStrin) {
                if (document.g_matchIndex >= matSize) {
                    document.g_matchIndex = 0;
                }
                var elm = ".mat:eq(" + document.g_matchIndex + ")";
                //$(elm).parentsUntil("tr").addClass ("hili");
                $(".mat.matIndex").removeClass("matIndex");
                $(elm).addClass("matIndex");
                $(elm)[0].scrollIntoViewIfNeeded();
                $("#searchResult").text("hili:" + document.g_matchIndex + "/" + document.g_matchCount);
                document.g_matchIndex++;
                return;
            }
            document.g_matchStrin = str;
            document.g_matchCount = 0;
            document.g_matchIndex = 0;
            $("a[vid]").each(function (idx) {
                var ss = $(this).text();
                var mat = ss.match(reg);
                if (mat) {
                    $.each(mat, function (i, v) {
                        if (0 == i) {
                            ss = ss.replace(v, "<font class='mat'>" + v + "</font>");
                        }
                    });
                    $(this).html(ss).prev().attr("checked", true);
                    document.g_matchCount++;
                };
            });
            $("#searchResult").text("tot:" + document.g_matchCount);
        };

        function restapi_loadBibVolChpVrs_genTable(ret) {
            function on_editing() {
                var txt = $(this).html();
                var vid = $(this).attr("vid");
                var mat = vid.match(/^(\w{3})(\d+)\:(\d+)$/);
                var dat = {}
                if (mat) {
                    dat.vol = mat[1];
                    dat.chp = mat[2];
                    dat.vrs = mat[3];
                };
                dat.txt = txt;
                var inp = { fname: ["_notes"], dat: dat };
                var par = { api: "BibleObj_update_notes", inp: inp };
                Jsonpster.Run(par, function () {
                    jsonpsvr_ok();
                });
            };
            function gen_table(ret) {
                var s = "<table border='1'>";
                s += "<thead><th>#</th><th>cvc</th><th>scripts</th></thead>";
                s += "<tbody>";
                var idx = 0;
                $.each(ret, function (vol, chpObj) {
                    $.each(chpObj, function (chp, vrsObj) {
                        $.each(vrsObj, function (vrs, val) {
                            //console.log("typeof val=", typeof val);
                            var vid = vol + "<br>" + chp + ":" + vrs;
                            s += "<tr><td>" + (++idx) + "</td><td class='vid'>" + vid + "</td><td>";
                            if ("object" == typeof val) {
                                $.each(val, function (key, str) {
                                    var vid = vol + chp + ":" + vrs;
                                    s += "<div><input type='checkbox' title='" + key + "'/><a vid='" + vid + "'>" + str + "</a></div>";
                                });
                            }
                            if ("string" == typeof val) {
                                s += "<div>" + val + "</iv>";
                            }
                            s += "</td></tr>";
                        });
                    });
                });
                s += "</tbody></table>";
                return { htm: s, size: idx };
            }
            var inpobj = gBim.get_chap_by_selected();
            var fnamAr = inpobj.fname;
            const cidx = fnamAr.indexOf("_notes");
            console.log(ret);
            var tb = gen_table(ret);
            $("#searchResult").text("size=" + tb.size);
            $("#oBible").html(tb.htm);
            table_sort();
            $("#oBible").find(".vid").bind("click", function () {

                var vid = $(this).text();
                var mat = vid.match(/^(\w{3})(\d+)\:(\d+)$/);
                var volm = "_" + mat[1];
                var chap = mat[2]; while (chap.length < 3) chap = "0" + chap;
                var vers = mat[3];

                $(this).toggleClass("hili");
                //$("#selvcv").text(vid).toggleClass("hili");

                


                //https://www.blueletterbible.org/kjv/gen/1/1/s_1001
                var blb = BlueLetterBibleCode[mat[1]];
                var url = "https://www.blueletterbible.org/kjv/";
                url += blb + "/" + mat[2] + "/" + mat[3];
                var srf = "<a href='" + url + "'>blb</a> | ";


                ///
                var bkidx = BookID2IdxCode[volm];
                var file = bkidx[0] + volm + "_" + chap + ".htm#" + vers;
                var url = "../../../../../../../___bigdata/unzipped/rel/ham12/hgsbible/hgb/" + file;
                srf += "<a href='" + url + "'>h_g</a>";
                

                var tr="<tr><td/><td>"+vid+"</td><td>"+srf+"</td></tr>";
                if(undefined === document.m_tmp_tr_arr){
                    document.m_tmp_tr_arr=[];
                }
                if(document.m_tmp_tr_arr.indexOf(tr)<0){
                    document.m_tmp_tr_arr.push(tr);
                    $("#tmpsel2ref tbody").prepend(tr);
                }
                //alert(vid);
            });
            $("#oBible").find("[type=checkbox]").bind("click", function () {
                if ($(this).attr("title") === "_notes") {
                    if ($(this).prop("checked"))
                        $(this).next().attr("contenteditable", "true").addClass("hili").bind("keyup", on_editing);
                    else {
                        $(this).next().removeClass("hili").attr("contenteditable", null);
                    }
                }
            });
        }
        function BibleObj_search() {
            var s = $("#out").val().trim();
            var inp = gBim.get_chap_by_selected();
            if (!inp.validateSearch()) return;
            console.log(inp);
            var par = { api: "loadBible_Bkns_VolChpVrs", inp: inp };
            par = inp.getApiParam("loadBible_Bkns_VolChpVrs");

            Jsonpster.Run(par, restapi_loadBibVolChpVrs_genTable);

            console.log(Jsonpster);

        }
        function restapi_loadBibVolChpVrs() {
            var inp = gBim.get_chap_by_selected();
            inp.dat.searchFile = "";//disable search
            if (!inp.validateBibleLoad()) return;
            console.log(inp);

            var par = { api: "loadBible_Bkns_VolChpVrs", inp: inp };
            par = inp.getApiParam("loadBible_Bkns_VolChpVrs");

            Jsonpster.Run(par, restapi_loadBibVolChpVrs_genTable);

            console.log(Jsonpster);
        };

        function loadBible_history(bSortByTime) {
            var inp = { fname: [], dat: {} };
            var prm = { api: "loadBible_read_history", inp: inp };
            Jsonpster.Run(prm, function (ret) {
                //history
                console.log(ret);
                var ops = [];
                $.each(ret, function (vol, chobj) {
                    $.each(chobj, function (chp, vrsObj) {
                        $.each(vrsObj, function (vrs, ob) {

                            var dtm = "";
                            if (bSortByTime) dtm = ob.dtime;
                            var str = vol + " " + chp + " : " + vrs;
                            ops.push("<option time='" + dtm + "'>" + str + " &nbsp;&nbsp;&nbsp;&nbsp;</option>");

                        });
                    });
                });

                if (bSortByTime) {
                    ops.sort().reverse();
                }
                else {
                    ops.sort();
                }

                $("#sel_history").html(ops.join("")).find("option").bind("click", function () {
                    var s = $(this).text();
                    var mat = s.match(/^(\w{3})\s+(\d+)\s+[\:]\s+(\d+)\s+$/);
                    if (mat) {
                        console.log(mat);
                        var dat = { vol: mat[1], chp: mat[2], vrs: mat[3] };
                        var ret = gBim.get_chap_by_selected();
                        var inp = { fname: ret.fname, dat: dat };
                        console.log(inp);

                        var par = { api: "loadBible_Bkns_VolChpVrs", inp: inp };

                        Jsonpster.Run(par, restapi_loadBibVolChpVrs_genTable);
                    }
                });

            });
        }
        function load_search_string_history(bSortByTime) {
            var inp = { fname: ["search_history"], dat: {} };
            var prm = { api: "loadBible_read_regex_search_history", inp: inp };
            Jsonpster.Run(prm, function (ret) {
                //history
                console.log(ret);
                var ops = [];
                $.each(ret, function (vol, chobj) {
                    $.each(chobj, function (chp, vrsObj) {
                        $.each(vrsObj, function (vrs, ob) {
                            $.each(ob, function (searchStr, tm) {
                                ops.push("<option time='" + tm + "'>" + searchStr + " &nbsp;&nbsp;&nbsp;&nbsp;</option>");
                            });
                        });
                    });
                });
                ops.sort().reverse();
                $("#regex_history_lst").html(ops.join("")).find("option").bind("click", function () {
                    var s = $(this).text().trim();
                    $("#out").val(s);
                });

            });
        }



        function jsonpsvr_ok() {
            //https://www.w3schools.com/js/js_json_jsonp.asp
            var s = $("#out").val();
            if (s.length > 10) s = "";
            $("#texta").val(s + ".");
        }

    </script>

</HEAD>

<BODY>





    <div id="menuContainer">
        <div id="BibInputMenuHolder" height="100%">
        </div>



        <button id="indxer">indxer</button>
        <button id="load">load</button>

        <table border="1">
            <thead>
                <tr>
                    <td>#</td>
                    <td>Vol</td>
                    <td>Chp</td>
                    <td>Ver</td>
                </tr>
            </thead>
            <tbody id="StructAna"></tbody>
        </table>
    </div>
    <button id='menuToggler'>-</button>

    <hr />
    <span id='oBible'>----</span>

</BODY>

</HTML>
<script type="text/javascript">
    var BibleInputMenuContainer = `
        <div id="BibleInputMenuContainer">   
        <table border="0">
            <caption id="BibleInput">Bible Input Keys<a id='vname'></a></caption>
            <thead id="inoutkeyhdr"></thead>
            <tbody id='key_bdy'></tbody>
        </table>
        <table border="1" style="float:left;">
            <caption class='bbbCap' id='bkn_cap' title='Biblical Book Name'>BKN</caption>
            <thead id="bkn_hdr"></thead>
            <tbody id='bkn_bdy'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>
        <table border="1" style="float:left;">
            <caption class='' id='' title='Volumns Catagory'>Cat</caption>
            <thead id="cat_hdr"></thead>
            <tbody id='cat_bdy'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>

        <table border="1" style="float:left;">
            <caption class='vcvCap' id='vol_cap'>Vol</caption>
            <thead id="vol_hdr"></thead>
            <tbody id='vol_bdy'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>

        <table id='chp_tab' border="1" style="float:left;">
            <caption class='vcvCap' id='chp_cap'>*</caption>
            <thead id="chp_hdr"></thead>
            <tbody id='chp_bdy'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>
        <a style="float:left;">:</a>

        <table id="vrs_tab" border="1" style="float:left;">
            <caption class='vcvCap' id='vrs_cap'>*</caption>
            <thead id="vrs_hdr"></thead>
            <tbody id='vrs_tbd'>
                <tr>
                    <td></td>
                </tr>
            </tbody>
        </table>


        <table border="1" style="float:left;">
            <caption><button id="loadVolChpVrs" onclick='restapi_loadBibVolChpVrs();' title='Load Bible'>Load</button>
        </caption>
            <thead></thead>
            <tbody>
                <tr>
                    <td>
                       <select id="sel_history" multiple size='15'><option/></select><br>
                       <button id="loadhistory" onclick='loadBible_history(1);' title='load history sort by time'>H</button>
                       <button id="sort_history_by_vcvID"  onclick='loadBible_history(0);' title='sort by str'>^</button>
                    </td>
                </tr>
            </tbody>
        </table>
        <br>

        
        
        <textarea id="out" cols='60'></textarea><br>
        
        <button onclick="BibleObj_search();" title="search on svr">search</button>
        <button onclick="regex_match_next();" title="find on page">match</button>
        <br>
        <a id="searchResult" onclick="load_search_string_history();" title='load search history.'>search result...<a><br>
        <select id="regex_history_lst" size='15'  style="float:left;"><option/></select>
        <table id='tmpsel2ref' border="1">
            <caption id='selvcv'></caption>
            <thead><th>#</th><th>vcv</th><th>refs</th></thead>
            <tbody>
                
            </tbody>
        </table>
        </div>
        <br>`;
    const BibVolName = {
        "Gen": ['Genesis', '创世纪'],
        "Exo": ['Exodus', '出埃及记'],
        "Lev": ['Leviticus', '利未记'],
        "Num": ['Numbers', '民数记'],
        "Deu": ['Deuteronomy', '申命记'],
        "Jos": ['Joshua', '约书亚记'],
        "Jug": ['Judges', '士师记'],
        "Rut": ['Ruth', '路得记'],
        "1Sa": ['1_Samuel', '撒母耳记上'],
        "2Sa": ['2_Samuel', '撒母耳记下'],
        "1Ki": ['1_Kings', '列王记上'],
        "2Ki": ['2_Kings', '列王记下'],
        "1Ch": ['1_Chronicles', '历代志上'],
        "2Ch": ['2_Chronicles', '历代志下'],
        "Ezr": ['Ezra', '以斯拉记'],
        "Neh": ['Nehemiah', '尼希米记'],
        "Est": ['Esther', '以斯帖记'],
        "Job": ['Job', '约伯记'],
        "Psm": ['Psalm', '诗篇'],
        "Pro": ['Proverbs', '箴言'],
        "Ecc": ['Ecclesiastes', '传道书'],
        "Son": ['SongOfSolomon', '雅歌'],
        "Isa": ['Isaiah', '以赛亚书'],
        "Jer": ['Jeremiah', '耶利米书'],
        "Lam": ['Lamentations', '耶利米哀歌'],
        "Eze": ['Ezekiel', '以西结书'],
        "Dan": ['Daniel', '但以理书'],
        "Hos": ['Hosea', '何西阿书'],
        "Joe": ['Joel', '约珥书'],
        "Amo": ['Amos', '阿摩司书'],
        "Oba": ['Obadiah', '俄巴底亚书'],
        "Jon": ['Jonah', '约拿书'],
        "Mic": ['Micah', '弥迦书'],
        "Nah": ['Nahum', '那鸿书'],
        "Hab": ['Habakkuk', '哈巴谷书'],
        "Zep": ['Zephaniah', '西番雅书'],
        "Hag": ['Haggai', '哈该书'],
        "Zec": ['Zechariah', '撒迦利亚'],
        "Mal": ['Malachi', '玛拉基书'],
        "Mat": ['Matthew', '马太福音'],
        "Mak": ['Mark', '马可福音'],
        "Luk": ['Luke', '路加福音'],
        "Jhn": ['John', '约翰福音'],
        "Act": ['Acts', '使徒行传'],
        "Rom": ['Romans', '罗马书'],
        "1Co": ['1_Corinthians', '哥林多前书'],
        "2Co": ['2_Corinthians', '哥林多后书'],
        "Gal": ['Galatians', '加拉太书'],
        "Eph": ['Ephesians', '以弗所书'],
        "Phl": ['Philippians', '腓立比书'],
        "Col": ['Colossians', '歌罗西书'],
        "1Ts": ['1_Thessalonians', '帖撒罗尼迦前书'],
        "2Ts": ['2_Thessalonians', '帖撒罗尼迦后书'],
        "1Ti": ['1_Timothy', '提摩太前书'],
        "2Ti": ['2_Timothy', '提摩太后书'],
        "Tit": ['Titus', '提多书'],
        "Phm": ['Philemon', '腓利门书'],
        "Heb": ['Hebrews', '希伯来书'],
        "Jas": ['James', '雅各书'],
        "1Pe": ['1_Peter', '彼得前书'],
        "2Pe": ['2_Peter', '彼得后书'],
        "1Jn": ['1_John', '约翰一书'],
        "2Jn": ['2_John', '约翰二书'],
        "3Jn": ['3_John', '约翰三书'],
        "Jud": ['Jude', '犹大书'],
        "Rev": ['Revelation', '启示录'],
    };
    var BlueLetterBibleCode = {
        "Gen": "Gen",
        "Exo": "Exo",
        "Lev": "Lev",
        "Num": "Num",
        "Deu": "Deu",
        "Jos": "Jos",
        "Jug": "Jug",
        "Rut": "Rut",
        "1Sa": "1Sa",
        "2Sa": "2Sa",
        "1Ki": "1Ki",
        "2Ki": "2Ki",
        "1Ch": "1Ch",
        "2Ch": "2Ch",
        "Ezr": "Ezr",
        "Neh": "Neh",
        "Est": "Est",
        "Job": "Job",
        "Psm": "Psa",//
        "Pro": "Pro",
        "Ecc": "Ecc",
        "Son": "Son",
        "Isa": "Isa",
        "Jer": "Jer",
        "Lam": "Lam",
        "Eze": "Eze",
        "Dan": "Dan",
        "Hos": "Hos",
        "Joe": "Joe",
        "Amo": "Amo",
        "Oba": "Oba",
        "Jon": "Jon",
        "Mic": "Mic",
        "Nah": "Nah",
        "Hab": "Hab",
        "Zep": "Zep",
        "Hag": "Hag",
        "Zec": "Zec",
        "Mal": "Mal",
        "Mat": "Mat",
        "Mak": "Mak",
        "Luk": "Luk",
        "Jhn": "Jhn",
        "Act": "Act",
        "Rom": "Rom",
        "1Co": "1Co",
        "2Co": "2Co",
        "Gal": "Gal",
        "Eph": "Eph",
        "Phl": "Phl",
        "Col": "Col",
        "1Ts": "1Ts",
        "2Ts": "2Ts",
        "1Ti": "1Ti",
        "2Ti": "2Ti",
        "Tit": "Tit",
        "Phm": "Phm",
        "Heb": "Heb",
        "Jas": "Jas",
        "1Pe": "1Pe",
        "2Pe": "2Pe",
        "1Jn": "1Jn",
        "2Jn": "2Jn",
        "3Jn": "3Jn",
        "Jud": "Jud",
        "Rev": "Rev",
    };//BookChapterVerseMax
    var BookID2IdxCode = {
        _Gen: ['01', 'h'],
        _Exo: ['02', 'h'],
        _Lev: ['03', 'h'],
        _Num: ['04', 'h'],
        _Deu: ['05', 'h'],
        _Jos: ['06', 'h'],
        _Jug: ['07', 'h'],
        _Rut: ['08', 'h'],
        _1Sa: ['09', 'h'],
        _2Sa: ['10', 'h'],
        _1Ki: ['11', 'h'],
        _2Ki: ['12', 'h'],
        _1Ch: ['13', 'h'],
        _2Ch: ['14', 'h'],
        _Ezr: ['15', 'h'],
        _Neh: ['16', 'h'],
        _Est: ['17', 'h'],
        _Job: ['18', 'h'],
        _Psm: ['19', 'h'],
        _Pro: ['20', 'h'],
        _Ecc: ['21', 'h'],
        _Son: ['22', 'h'],
        _Isa: ['23', 'h'],
        _Jer: ['24', 'h'],
        _Lam: ['25', 'h'],
        _Eze: ['26', 'h'],
        _Dan: ['27', 'h'],
        _Hos: ['28', 'h'],
        _Joe: ['29', 'h'],
        _Amo: ['30', 'h'],
        _Oba: ['31', 'h'],
        _Jon: ['32', 'h'],
        _Mic: ['33', 'h'],
        _Nah: ['34', 'h'],
        _Hab: ['35', 'h'],
        _Zep: ['36', 'h'],
        _Hag: ['37', 'h'],
        _Zec: ['38', 'h'],
        _Mal: ['39', 'h'],
        _Mat: ['40', 'b'],
        _Mak: ['41', 'b'],
        _Luk: ['42', 'b'],
        _Jhn: ['43', 'b'],
        _Act: ['44', 'b'],
        _Rom: ['45', 'b'],
        _1Co: ['46', 'b'],
        _2Co: ['47', 'b'],
        _Gal: ['48', 'b'],
        _Eph: ['49', 'b'],
        _Phl: ['50', 'b'],
        _Col: ['51', 'b'],
        _1Ts: ['52', 'b'],
        _2Ts: ['53', 'b'],
        _1Ti: ['54', 'b'],
        _2Ti: ['55', 'b'],
        _Tit: ['56', 'b'],
        _Phm: ['57', 'b'],
        _Heb: ['58', 'b'],
        _Jas: ['59', 'b'],
        _1Pe: ['60', 'b'],
        _2Pe: ['61', 'b'],
        _1Jn: ['62', 'b'],
        _2Jn: ['63', 'b'],
        _3Jn: ['64', 'b'],
        _Jud: ['65', 'b'],
        _Rev: ['66', 'b'],
    };

</script>
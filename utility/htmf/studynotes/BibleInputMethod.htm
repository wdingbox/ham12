<!DOCTYPE html>
<HTML manifest___xxx="BiblePad-2015.appcache">

<HEAD>
    <TITLE>Bii</TITLE>
    <base target="_blank" />
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">




    <script>
        var gStartDate = new Date();
        console.log(gStartDate.toString() + " ------ start load");//
    </script>



    <script language="javascript" src="../../htmjs/jq/jquery.js">
    </script>
    <script language="javascript" src="../../htmjs/jq/table_Indexer.js">
    </script>
    <script language="javascript" src="../../htmjs/jq/jquery.tablesorter.js"></script>


    <script language="javascript" src="../../../jsdb/jsBibleStruct/BBE.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/CUVS.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/H_G.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/KJV.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/NIV.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/PINYIN.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/STUS.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/WLVS.json.js"></script>
    <script language="javascript" src="../../../jsdb/jsBibleStruct/_Max.json.js"></script>



    <script src_test="http://localhost:7778/Jsonpster/" src="http://104.188.182.128:7778/Jsonpster/"></script>




    <script>
        console.log((new Date()).toString());//
    </script>
    <style>

    </style>



    <script language="javascript">
        console.log(window.location);
        var gBim = null;//

        $(document).ready(function () {
            gBim = new BibleInputMenu();

            gBim.init();



            //table_sort();
            //table_col_index();
        });/////////////




        var BibleInputMenu = function () {
        }
        BibleInputMenu.prototype.init = function () {
            if ("undefined" === typeof Jsonpster) {
                alert("Jsonpster server down.");
            }
            $("body").prepend(BibleInputMenuContainer);

            this.Gen_Keys_Menu();
            this.Gen_BKN_Table("#Tab_bkn tbody", CNST.FnameOfBibleObj);
            this.Gen_Cat_Table();
            this.Gen_Digit_Table("#Tab_chp tbody", "chp_num", 150);
            this.Gen_Digit_Table("#Tab_vrs tbody", "vrs_num", 176);

            var _This = this;

            $("#menuToggler").click(function () {

                var s = $(this).text();
                if ("-" === s) {
                    $(this).text("=");
                    $("#BibInputMenuHolder").slideToggle();
                } else if ("=" == s) {
                    $("#others").slideToggle();
                    $(this).text("+");
                }
                else if ("+" == s) {
                    $("#BibInputMenuHolder").slideToggle();
                    $("#others").slideToggle();
                    $(this).text("-");
                }
            });

            $("#Compare_vcv").click(function () {
                $("#oBible table").find("tr").each(function () {
                    var len = $(this).find("td:eq(2)").find("[type=checkbox]").length;
                    $(this).find("td:eq(0)").text(len);
                });
                table_sort("#oBible table");
            });
            $("#oBible_indxer").click(function () {
                table_col_index("#oBible table");
                table_sort("#oBible table");
            });



            $("#vol_capx").click(function () {
                var m = $("#Tab_vol tbody").find(".v3.hili").length;
                if (m > 0) {
                    $("#Tab_vol tbody").find(".v3").removeClass("hili");
                } else {
                    $("#Tab_vol tbody").find(".v3").addClass("hili");
                }
                var m = $("#Tab_vol tbody").find(".v3.hili").length;
                $("#vol_cap_sub").text(m);
            });




            $("#blb").click(function () {
                var vid = $(".tmp2ref.hili").text();
                var ret = Uti.vcv_parser(vid);
                var url = $(this).attr("ref");
                if (!ret) return;

                var blbvol = CNST.BlueLetterBibleCode[ret.vol];
                var file = blbvol + "/" + ret.chp + "/" + ret.vrs;
                $(this).attr("href", url + file);
            });
            $("#h_g").click(function () {
                var vid = $(".tmp2ref.hili").text();
                var ret = Uti.vcv_parser(vid);
                var url = $(this).attr("ref");
                if (!ret) return;

                var volm = ret._vol;
                var bkidx = CNST.BookID2IdxCode[volm];
                var file = bkidx[0] + volm + "_" + ret.chp3 + ".htm#" + ret.vrs;
                $(this).attr("href", url + file);
            });
            $("#gtw").click(function () {
                var vid = $(".tmp2ref.hili").text();
                var ret = Uti.vcv_parser(vid);
                var url = $(this).attr("ref");
                if (!ret) return;

                var vol2 = CNST.BibVolName[ret.vol][0];
                var file = vol2 + ret.chp + ":" + ret.vrs + "&version=NIV;CUV;KJV;NKJV;ESV";
                $(this).attr("href", url + file);
            });

            $("#Tab_cat caption").click(function () {
                $(".cat").removeClass("hili");
                $(".v3").remove();

            });
        };
        BibleInputMenu.prototype.Gen_Keys_Menu = function () {
            var ks = Uti.get_cha_arr_after_str("", _Max_struct);

            var s = "<tr id='vitr'><td>";
            var _This = this;
            $.each(ks, function (i, c) {
                var volarr = Uti.Get_Vol_Arr_from_KeyChar(c, _Max_struct);
                var ssb = "<sub>" + volarr.length + "</sub>";
                if (volarr.length === 1) ssb = "";
                c = c + ssb;
                s += "<button class='vin'>" + c + "</button>";
                if (9 == i) s += "</td></tr><tr><td>";
            });
            s += "</td></tr>";

            $("#Tab_BibleSingleInputKey tbody").html(s).find(".vin").bind("click", function () {
                $(".vin").removeClass("hili");
                $(this).addClass("hili");
                var ch = $(this).text();
                var volarr = Uti.Get_Vol_Arr_from_KeyChar(ch[0], _Max_struct);
                _This.Gen_Vol_Table("#Tab_vol tbody", volarr);

            });
            return ks;
        };

        BibleInputMenu.prototype.Gen_BKN_Table = function gen_BKN_Table(tid, bknArr) {
            var str = "";
            $.each(bknArr, function (i, v) {
                var hil = "";
                if (i == 2) hil = "hili";
                str += "<tr><td class='cbkn " + hil + "'>" + v + "</td></tr>";
            });
            $(tid).html(str).find(".cbkn").bind("click", function () {
                //$(".cbkn").removeClass("hili");
                $(this).toggleClass("hili");

                $(".searchFile").removeClass("searchFile");
                $(this).toggleClass("searchFile");

                $("#searchFile").text($(this).text());
            });
        }
        BibleInputMenu.prototype.Gen_Cat_Table = function () {
            var _This = this;
            var s = "";
            $.each(Object.keys(CNST.Cat2VolArr), function (i, v) {
                s += "<tr><td class='cat'>" + v + "</td></tr>";
            });
            $("#Tab_cat tbody").html(s).find(".cat").bind("click", function () {
                $(".cat").removeClass("hili");
                var scat = $(this).addClass("hili").text();
                var vol_arr = CNST.Cat2VolArr[scat];
                _This.Gen_Vol_Table("#Tab_vol tbody", vol_arr);
            });
        };

        BibleInputMenu.prototype.Gen_Vol_Table = function (tid, vol_arr) {
            function update_digit_cap(tid) {
                var m = $(tid).find(".v3.hili").length;
                $("#vol_cap_sub").text(m);
                if (m > 1) {
                    $(".digiCap").addClass("grayout");
                } else {
                    $(".digiCap").removeClass("grayout");
                }
            };
            var _This = this;
            var trs = Uti.Gen_Vom_trs(vol_arr);
            $("#vol_cap_sub").text("1");
            $("#BibleInputCap").text(CNST.BibVolName[vol_arr[0]]);
            $(tid).html(trs).find(".v3").bind("click", function () {
                var vol = $(this).text();
                $(this).toggleClass("hili");
                $("#BibleInputCap").text(CNST.BibVolName[vol]);
                update_digit_cap(tid);
            });
            update_digit_cap(tid);
        };

        BibleInputMenu.prototype.Gen_Digit_Table = function (tid, clsname, imaxNum) {
            function _td(num, clsname) {
                var s = "<td><button class='digit " + clsname + "'>" + num + "</button></td>";
                return s;
            }
            function gen_trs() {
                var s = "", num = 1;
                s += "<tr>" + _td(0, clsname);
                s += "<th title='clear'><button title='clear' class='clear' >c</button></th>";
                s += "<th title='undo'><button title='clear'  class='undo' >u</button></th>";
                s += "</tr>";
                for (var i = 0; i < 3; i++) {
                    s += "<tr>";
                    for (var k = 0; k < 3; k++) {
                        s += _td(num++, clsname);
                    }
                    s += "</tr>";
                };
                return s;
            };
            var s=gen_trs();


            var _This=this;
            $(tid).html(s).find("button:contains('0')").attr("disabled", true);
            $(tid).find(".digit").bind("click", function () {
                var num = $(this).text();

                var cap = $(this).parentsUntil("table").parent().find(".digiCap");
                var scap = cap.text();
                if (scap.length >= 3) scap = scap.substr(1);
                var icap = parseInt(scap);
                if (!Number.isInteger(icap)) {
                    icap = 0;
                }

                var updateCap = icap * 10 + parseInt(num);
                if (updateCap > imaxNum) updateCap = imaxNum;
                cap.text(updateCap);
                console.log(num);

                ///////////////////////////////////
                if ($(cap).attr("id") === "vrs_cap") {
                    //grayout
                    if (false == $(cap).hasClass('grayout')) {
                        var ret = _This.get_selected_xOj_Parm();
                        if (ret.vrs) {
                            var vid = ret.vrs;
                            Uti.scrollIntoViewIfNeeded_to_vid(vid);
                        }
                    };
                };////////////////////////////////



                var inextbase = icap * 100;
                if (inextbase > imaxNum) {
                    $(tid).find(".digit").attr("disabled", true);
                    return;
                }
                $(tid).find("button[disabled]").attr("disabled", null);
            });
            $(tid).find(".clear").bind("click", function () {
                var cap = $(this).parentsUntil("table").parent().find(".digiCap");
                cap.text("*");
                $(tid).find(".digit").attr("disabled", null);
                $(tid).find("button:contains('0')").attr("disabled", true);

            });
            $(tid).find(".undo").bind("click", function () {
                var cap = $(this).parentsUntil("table").parent().find(".digiCap");
                var str = cap.text();
                if (str.length == 1) {
                    cap.text("*");
                }
                else {
                    str = str.substr(0, str.length - 1);
                    cap.text(str);
                }
                $(tid).find(".digit").attr("disabled", null);

            });
            return;
        };


        BibleInputMenu.prototype.get_selected_bkn_fnamesArr = function () {
            var fnamesArr = [];
            $(".cbkn.hili").each(function () {
                var ss = $(this).text();
                fnamesArr.push(ss);
            });
            if (fnamesArr.length == 0) {
                alert("Err: no bookname selected.");
            }
            return fnamesArr;
        };///
        BibleInputMenu.prototype.get_selected_Search_Parm = function () {
            var searchFileName = $(".cbkn.hili.searchFile").text();
            var searchStrn = $("#out").val();
            return { File: searchFileName, Strn: searchStrn };
        };///
        BibleInputMenu.prototype.get_selected_xOj_Parm = function () {
            var vol_arr = [];
            $(".v3.hili").each(function () {
                var svol = $(this).text();
                vol_arr.push(svol);
            });
            if (0 === vol_arr.length) {
                var items_arr = [];
                $(".v3").each(function () {
                    var svol = $(this).text();
                    items_arr.push(svol);
                });
                if (items_arr.indexOf("Gen") >= 0) {
                    vol_arr = CNST.OT_Vols_Ary;
                }
                if (items_arr.indexOf("Mat") >= 0) {
                    vol_arr = CNST.NT_Vols_Ary;
                };
                if (0 === items_arr.length) {
                    vol_arr = vol_arr.concat(CNST.OT_Vols_Ary);
                    vol_arr = vol_arr.concat(CNST.NT_Vols_Ary);
                    if (vol_arr.length != 66) {
                        alert("err concat len=" + vol_arr.length)
                    };
                }
            };
            if (0 === vol_arr.length) {
                vol_arr = null;
            }


            var chp = $("#chp_cap").text();
            var vrs = $("#vrs_cap").text();

            var bibOj = Uti.get_bibOj(vol_arr, chp, vrs);


            if (1 === vol_arr.length) {
                var vol = vol_arr[0];
                bibOj.vrs = vol + chp + ":" + vrs;
            }
            return bibOj;
        };///
        BibleInputMenu.prototype.get_selected_load_parm = function () {
            //
            var fnamesArr = this.get_selected_bkn_fnamesArr();
            //var search = this.get_selected_Search_Parm();
            var bibOj = this.get_selected_xOj_Parm();
            var ret = { fname: fnamesArr, bibOj: bibOj, Search: null };
            ret.validateBibleLoad = function () {
                if (null === this.bibOj) {
                    //alert("bibOj=null");
                    return false;
                    if (confirm("load the whole Bible?")) {
                        this.bibOj = {};
                    } else {
                        return false;
                    }
                }
                if (ret.fname.length === 0) {
                    alert("Please select a biblical BooK Name.");
                    return false;
                }
                var volArr = Object.keys(this.bibOj);
                if (volArr.length >= 66) {
                    var s = JSON.stringify(this);
                    s += "\n\nLoad whole Bible vol=" + volArr.length + "\nContinue?";
                    return confirm(s);
                }
                return true;
            };
            ret.validateSearch = function () {
                if (!this.Search.File) {
                    alert("no searchFile");
                    return false;
                }
                if (this.Search.Strn.length == 0) {
                    alert("no searchStrn");
                    return false;
                }
                return true;
            }
            ret.getApiParam = function (sApiName) {
                return { api: sApiName, inp: this };
            }
            return ret;
        };
        ///////////
        //////////
        //////////
        //////////
        /////////
        ///////////
        //////////
        //////////
        //////////
        /////////
        function apiCallback_Gen_clientBibleObj_table(ret) {
            function on_editing() {
                var txt = $(this).html();
                var vid = $(this).attr("vid");
                var mat = vid.match(/^(\w{3})(\d+)\:(\d+)$/);
                if (!mat) {
                    alert("edi save err:" + vid + ":" + txt);
                    return;
                }
                var dat = {}
                dat.vol = mat[1];
                dat.chp = mat[2];
                dat.vrs = mat[3];
                dat.txt = txt;

                var _This = this;
                var inp = { fname: [], vcvx: dat };
                var par = { api: RestApi.ApiBibleObj_update_notes, inp: inp };
                Jsonpster.Run(par, function () {
                    jsonpsvr_ok();
                    $(_This).removeClass("edit_keydown");
                });
            };


            var tb = Uti.gen_clientBibleObj_table(ret);
            SearchResultsPrepend("tot=" + tb.size);
            $("#oBible").html(tb.htm);
            $("#oBible").find(".vid").bind("click", function () {
                $(this).toggleClass("hili");
                var vid = $(this).text();
                var tr = "<tr><td class='tmp2ref'>" + vid + "&nbsp;&nbsp;&nbsp;</td></tr>";
                if (undefined === document.m_tmp_tr_arr) {
                    document.m_tmp_tr_arr = [];
                }
                if (document.m_tmp_tr_arr.indexOf(tr) < 0) {
                    document.m_tmp_tr_arr.push(tr);
                    var etr = $(tr);
                    etr.find(".tmp2ref").bind("click", function () {
                        $(".tmp2ref").removeClass("hili");
                        $(this).addClass("hili");
                        var vid = $(this).text().trim();
                        Uti.scrollIntoViewIfNeeded_to_vid(vid);
                    })
                    $("#tmpsel2ref tbody").prepend(etr);
                }
                //alert(vid);
            });
            $("#oBible").find(".tx").bind("keyup", on_editing);
            $("#oBible").find(".tx").bind("keydown", function () {
                $(this).addClass("edit_keydown");
            });
            $("#oBible").find("[type=checkbox]").bind("click", function () {
                if ($(this).attr("title") != "_notes") {
                    if ($(this).prop("checked")) {
                        if (!confirm("Only Authorized people can edit it. \n To Edit?")) {
                            return;
                        };
                    }
                }
                if ($(this).prop("checked"))
                    $(this).next().attr("contenteditable", "true").addClass("editing");
                else {
                    $(this).next().removeClass("editing").attr("contenteditable", null);
                }
            });
            $("#oBible").find(".tx").bind("click", function () {
                var txt = $(this).text();
                var vcv = $(this).parentsUntil("tbody").find("td:eq(1)").text();
                $("#out").val(txt + " (" + vcv + ")");
            });
        }
        function onclick_load_BknVolChpVrs() {
            var inp = gBim.get_selected_load_parm();
            //inp.Search.File = "";//disable search
            if (!inp.validateBibleLoad()) return;
            console.log(inp);

            var par = { api: RestApi.ApiBibleObj_load_Bkns_Vols_Chp_Vrs, inp: inp };
            par = inp.getApiParam(RestApi.ApiBibleObj_load_Bkns_Vols_Chp_Vrs);

            Jsonpster.Run(par, apiCallback_Gen_clientBibleObj_table);

            console.log(Jsonpster);
        };

        function onclick_regex_match_next(incrs) {
            var str = $("#out").val();
            var reg = new RegExp(str, "g");

            var matSize = $(".mat").length;
            if (matSize > 0 && str === document.g_matchStrin) {
                if (Math.abs(document.g_matchIndex) >= matSize) {
                    document.g_matchIndex = 0;
                }
                var elm = ".mat:eq(" + document.g_matchIndex + ")";
                //$(elm).parentsUntil("tr").addClass ("hili");
                $(".mat.matIndex").removeClass("matIndex");
                $(elm).addClass("matIndex");
                $(elm)[0].scrollIntoViewIfNeeded();
                SearchResultsPrepend("hili:" + document.g_matchIndex + "/" + document.g_matchCount);
                document.g_matchIndex += incrs;
                return;
            }
            document.g_matchStrin = str;
            document.g_matchCount = 0;
            document.g_matchIndex = 0;
            $("a[vid]").each(function (idx) {
                var ss = $(this).text();
                var mat = ss.match(reg);
                if (mat) {
                    $.each(mat, function (i, v) {
                        if (0 == i) {
                            ss = ss.replace(v, "<font class='mat'>" + v + "</font>");
                        }
                    });
                    $(this).html(ss).prev().attr("checked", true);
                    document.g_matchCount++;
                };
            });
            SearchResultsPrepend("tot:" + document.g_matchCount);
            if (document.g_matchCount > 0) {//save to history.
                var inp = { Search: { File: RestApi.HistFile.__history_regex_search, Strn: str } };
                var prm = { api: RestApi.ApiBibleObj_access_regex_search_history, inp: inp };
                Jsonpster.Run(prm, function () {
                    SearchResultsPrepend("found");
                });
            };
        };
        function onclick_BibleObj_search_str() {
            var s = $("#out").val().trim();
            var inp = gBim.get_selected_load_parm();
            inp.Search = gBim.get_selected_Search_Parm();
            if (!inp.validateSearch()) return;
            console.log(inp);
            var par = { api: RestApi.ApiBibleObj_load_Bkns_Vols_Chp_Vrs, inp: inp };
            par = inp.getApiParam(RestApi.ApiBibleObj_load_Bkns_Vols_Chp_Vrs);

            Jsonpster.Run(par, apiCallback_Gen_clientBibleObj_table);

            console.log(Jsonpster);

        }

        function onclick_load_vcv_history(bSortByTime) {
            var inp = { Search: { File: RestApi.HistFile.__history_verses_loaded } };
            var prm = { api: RestApi.ApiBibleObj_access_regex_search_history, inp: inp };
            Jsonpster.Run(prm, function (ret) {
                //history
                console.log(ret);
                var ops = Uti.read_history_to_opt(ret, bSortByTime);
                $("#Tab_load_vcv_history tbody").html(ops.join("")).find(".option").bind("click", function () {
                    $(this).toggleClass("hili");
                    var s = $(this).text();
                    var mat = s.match(/^(\w{3})[\s]{0,}(\d+)\s{0,}[\:]\s{0,}(\d+)\s{0,}$/);
                    if (mat) {
                        console.log(mat);
                        //var dat = { vol: mat[1], chp: mat[2], vrs: mat[3] };
                        var bibOj = Uti.get_bibOj([mat[1]], mat[2], mat[3]);
                        var fnamesArr = gBim.get_selected_bkn_fnamesArr();
                        var inp = { fname: fnamesArr, bibOj: bibOj, Search: { File: "", Strn: "" } };
                        console.log(inp);

                        var par = { api: RestApi.ApiBibleObj_load_Bkns_Vols_Chp_Vrs, inp: inp };

                        Jsonpster.Run(par, apiCallback_Gen_clientBibleObj_table);
                    } else { alert("vcv err:" + s) }
                });

            });
        };///
        function onclick_load_search_string_history(bSortByTime) {
            var inp = { Search: { File: RestApi.HistFile.__history_regex_search, Strn: null } };//readonly.
            var prm = { api: RestApi.ApiBibleObj_access_regex_search_history, inp: inp };
            Jsonpster.Run(prm, function (ret) {
                //history
                console.log(ret);
                var ops = Uti.read_history_to_opt(ret, true);
                $("#Tab_regex_history_lst tbody").html(ops.join("")).find(".option").bind("click", function () {
                    $(this).toggleClass("hili");
                    var s = $(this).text().trim();
                    $("#out").val(s);
                });
            });
        }



        function jsonpsvr_ok() {
            //https://www.w3schools.com/js/js_json_jsonp.asp
            var s = $("#out").val();
            if (s.length > 10) s = "";
            $("#texta").val(s + ".");
        }
        function SearchResultsPrepend(str) {
            var results = str + ", " + $("#searchResult").text();
            results = results.substr(0, 60);
            $("#searchResult").text(results);
        }

    </script>

</HEAD>

<BODY>



</BODY>

</HTML>
<script type="text/javascript">

    var Uti = {
        scrollIntoViewIfNeeded_to_vid(vid) {
            //var vid = $(this).text().trim();
            $("#oBible").find(".vid").each(function () {
                var vid2 = $(this).text().trim();
                if (vid === vid2) {
                    $(this)[0].scrollIntoViewIfNeeded();
                    $(this).addClass("hili");
                }
            });
        },
        read_history_to_opt: function (ret, bSortByTime) {
            var ops = [];
            $.each(ret, function (vol, chobj) {
                $.each(chobj, function (chp, vrsObj) {
                    $.each(vrsObj, function (vrs, ob) {
                        $.each(ob, function (searchStr, tm) {
                            if (!bSortByTime) tm = "";
                            ops.push("<tr><td class='option' time='" + tm + "'>" + searchStr + " &nbsp;&nbsp;&nbsp;&nbsp;</td></tr>");
                        });
                    });
                });
            });
            ops.sort();
            if (bSortByTime) {
                ops.reverse();
            }
            return ops;
        },
        vcv_parser: function (vid) {
            vid = vid.replace(/\s/g, "");
            if (vid.length === 0) return alert("please select an item first.");
            var ret = { vol: "", chp: "", vrs: "" };
            var mat = vid.match(/^(\w{3})\s{,+}(\d+)\s{,+}[\:]\s{,+}(\d+)\s{,+}$/);
            var mat = vid.match(/^(\w{3})\s+(\d+)\s+[\:]\s+(\d+)\s+$/);
            var mat = vid.match(/^(\w{3})(\d+)\:(\d+)$/);
            if (mat) {
                ret.vol = mat[1];
                ret.chp = mat[2];
                ret.vrs = mat[3];
            } else {
                alert("vid=" + vid + "," + JSON.stringify(ret));
            }
            ret.chp3 = ret.chp.padStart(3, "0");
            ret._vol = "_" + ret.vol;
            return ret;
        },
        get_cha_arr_after_str: function (str, BibleObjStruct) {
            if (!BibleObjStruct) return [];
            var ret = {};
            Object.keys(BibleObjStruct).forEach(function (v) {
                if (v.indexOf(str) == 0) {
                    var idx = str.length;
                    if (v.length > idx) {
                        var ch = v[idx];
                        if (!ret[ch]) ret[ch] = 0;
                        ret[ch]++;
                    }
                }
            });
            var ks = Object.keys(ret).sort();
            return ks;
        },
        Get_Vol_Arr_from_KeyChar: function (ch, BibleObjStruct) {
            var arr = [];
            Object.keys(BibleObjStruct).forEach(function (vol) {
                if (vol.indexOf(ch) == 0) {
                    arr.push(vol);
                };
            });
            return arr;
        },
        Gen_Vom_trs: function (vol_arr) {
            var cls = " class='v3 hili' ";
            var trarr = [];
            vol_arr.forEach(function (vol) {
                //<td align='right'>"+BibVolName[vol][0]+"</td>
                trarr.push("<tr><td" + cls + "title='" + CNST.BibVolName[vol] + "'>" + vol + "</td></tr>");
                cls = " class='v3' ";
            });
            return trarr.join("");
        },
        validate_vcv_xxxxxx: function (vol, chp, vrs) {
            if (undefined == _Max_struct[vol]) return alert("fatal err vol=" + vol);
            else if (undefined == _Max_struct[vol][chp]) {
                var ichp = parseInt(chp);
                if (Number.isInteger(ichp)) {
                    var max = Object.keys(_Max_struct[vol]).length;
                    if (parseInt(chp) > max) {
                        return alert("input chp=" + chp + ":\n" + vol + " max chapter is " + max);
                    }
                }

            }
            else if (undefined == _Max_struct[vol][chp][vrs]) {
                var ivrs = parseInt(vrs);
                if (Number.isInteger(ivrs)) {
                    var max = Object.keys(_Max_struct[vol][chp]).length;
                    if (parseInt(vrs) >= max) {
                        return alert("input vrs=" + vrs + ":\n" + vol + " " + chp + " max verse is " + max);
                    }
                }
            }
            return true;
        },

        get_bibOj: function (vol_arr, chp, vrs) {
            if ("object" != typeof vol_arr) {
                alert("assertion failed: vol must be arry");
                return null;
            }
            if (vol_arr.length === 0) {
                //alert("vol_arr is empty");
                return {};
            }
            var bibOj = {};
            ////vol
            var vol = "";
            for (var i = 0; i < vol_arr.length; i++) {
                vol = vol_arr[i];
                if (undefined === _Max_struct[vol]) {
                    alert("invalide vol=" + vol);
                    return null;
                }
                bibOj[vol] = {};
            }
            if (vol_arr.length > 1) {//for cat or multiple vol names.
                return bibOj;
            };////////////////////////////////////////////////
            ////////
            //vol 1, chp
            //
            if (chp.length == 0) { return bibOj; }
            if (isNaN(chp)) {
                console.log("chp isNaN:", chp);
                return bibOj;
            }
            if (undefined === _Max_struct[vol][chp]) {
                alert("ERR:\n" + vol + "_" + chp + "\n not exist.")
                return null;
            }
            bibOj[vol][chp] = {};
            /////
            //vrs
            if (vrs.length === 0) { return bibOj; }

            if (isNaN(vrs)) {
                console.log("vrs isNaN:", vrs);
                return bibOj;
            }
            if (undefined === _Max_struct[vol][chp][vrs]) {
                alert("ERR:\n" + vol + "_" + chp + ":" + vrs + " not exist.")
                return null;
            }
            bibOj[vol][chp][vrs] = "";
            return bibOj;
        },

        gen_clientBibleObj_table: function (ret) {
            var s = "<table border='1'>";
            s += "<thead><th>#</th><th>cvc</th><th>scripts</th></thead>";
            s += "<tbody>";
            var idx = 0;
            $.each(ret, function (vol, chpObj) {
                $.each(chpObj, function (chp, vrsObj) {
                    $.each(vrsObj, function (vrs, val) {
                        //console.log("typeof val=", typeof val);
                        var vid = vol + "<br>" + chp + ":" + vrs;
                        s += "<tr><td>" + (++idx) + "</td><td class='vid'>" + vid + "</td><td>";
                        if ("object" == typeof val) {
                            $.each(val, function (key, str) {
                                var vid = vol + chp + ":" + vrs;
                                s += "<div><input type='checkbox' title='" + key + "'/><a class='tx' vid='" + vid + "'>" + str + "</a></div>";
                            });
                        }
                        if ("string" == typeof val) {
                            s += "<div>" + val + "</iv>";
                        }
                        s += "</td></tr>";
                    });
                });
            });
            s += "</tbody></table>";
            return { htm: s, size: idx };
        },
    };////  Uti
    ////////////////////////////////////
    const CNST = {
        ID: {
            BibleInputMenuContainer: "BibleInputMenuContainer",
        }
    }
    var BibleInputMenuContainer = `



    <style>
    body {
        background-color: black;
        color: white;
        width: 100%;
        font-size: 100%;

        padding: 0px 0px 0px 0px;
        margin: 0px 0px 0px 0px;

        font-family: 'Times New Roman';
    }

    #menuContainer,
    #menuToggler {
        position: fixed;
        top: 10px;
        right: 5px;
        opacity: 100;

    }

    #menuContainer {
        background-color: rgb(51, 158, 158);

        overflow-y: scroll;
        display: block;

        height: 500px
        width:400px;
        

    }

    #menuToggler {
        height: 30px;
    }



    .hili {
        background-color: red;
    }

    .editing {
        border: 3px solid gold;
        color: black;
        background-color: cornsilk;
    }

    .edit_keydown {
        border: 3px solid yellow;
    }

    .mat {
        background-color: chartreuse;
        color: black;
    }

    .matIndex {
        border: 5px solid red;
    }

    .searchFile {
        color: black;
    }

    sub {
        font-size: 8px;
    }

    .grayout {
        color: gray;
    }

    .jw {
        background-color: brown;
    }


    div[contenteditable] {
        background-color: rgb(40, 49, 70);
    }


    #Tab_chp {
        background-color: green;
    }

    #Tab_vrs {
        background-color: rgb(149, 97, 29);
    }


    #Tab_vol thead,
    #Tab_cat thead,
    #Tab_bkn thead {
        display: block;
    }

    #Tab_vol tbody,
    #Tab_cat tbody,
    #Tab_bkn tbody {
        height: 266px;
        overflow-y: scroll;
        display: block;
    }

    #Tab_load_vcv_history {
        background-color: rgb(29, 105, 149);
    }


    #Tab_regex_history_lst td {
        width: 100px;
        overflow: hidden;
        display: inline-block;
        white-space: nowrap;
    }

    #Tab_regex_history_lst thead,
    #Tab_load_vcv_history thead {
        display: block;
    }

    #Tab_regex_history_lst tbody,
    #Tab_load_vcv_history tbody {
        height: 210px;
        overflow-y: scroll;
        display: block;
    }


    #tmpsel2ref thead,
    #refslist thead {
        display: block;
    }

    #tmpsel2ref tbody,
    #refslist tbody {
        height: 210px;
        overflow-y: scroll;
        display: block;
    }

    #loads_buttons {
        white-space: nowrap;
    }

    *[title='clear'],
    *[title='undo'] {
        background-color: rgb(74, 155, 202);
    }

    .vin {
        height: px;
    }

    #searchResult{
        
        background-color:green;
        
 
    }


    #oBiblexx table thead {
        display: block;
    }

    #oBiblexx table tbody {
        height: 1500px;
        overflow-y: scroll;
        display: block;
    }

    #others {
        display: inline-block;
        /* stop float left */
        width: 100%;
    }
</style>

<div id="menuContainer">
    <div id="BibInputMenuHolder">
        <div id="ID_BibleInputMenuContainer">
            <table border="0" id="Tab_BibleSingleInputKey">
                <caption id="BibleInputCap">Bible Input Keys</caption>
                <thead id=""></thead>
                <tbody id=""></tbody>
            </table>
            <table id="Tab_bkn" border="1" style="float:left;">
                <caption class='bbbCap' id='bkn_cap' title='Biblical Book Name'>BKN</caption>
                <thead id=""></thead>
                <tbody id=''>
                    <tr>
                        <td></td>
                    </tr>
                </tbody>
            </table>
            <table border="1" style="float:left;" id="Tab_cat">
                <caption class='' id='' title='Volumns Catagory'>Cat</caption>
                <thead id=""></thead>
                <tbody id=''>
                    <tr>
                        <td></td>
                    </tr>
                </tbody>
            </table>

            <table id="Tab_vol" border="1" style="float:left;">
                <caption class='vcvCap' id='vol_capx' title='volunm name'>V<sub id="vol_cap_sub">0</sub></caption>
                <thead id=""></thead>
                <tbody id=''>

                </tbody>
            </table>

            <table id='Tab_chp' border="1" style="float:;">
                <caption>chp <a class='digiCap' id='chp_cap' title='chapter'>*</a></caption>
                <thead id=""></thead>
                <tbody id=''>
                    <tr>
                        <td></td>
                    </tr>
                </tbody>
            </table>
            <a style="float:;"></a>

            <table id="Tab_vrs" border="1" style="float:;">
                <caption onclick='onclick_load_BknVolChpVrs();'>vrs <a class='digiCap' id='vrs_cap' title='verse'>*</a></caption>
                <thead id=""></thead>
                <tbody id="">
                    <tr>
                        <td></td>
                    </tr>
                </tbody>
            </table>
            <button id="loadVolChpVrs" onclick='onclick_load_BknVolChpVrs();' title='Load Bible'>Load</button>




        </div>
        <div id="ID_Explore">

            <textarea id="out" cols='50'></textarea><br>

            <button onclick="onclick_BibleObj_search_str();" title="search on svr">search</button>
            <button onclick="onclick_regex_match_next(1);" title="find on page">Next</button>
            <button onclick="onclick_regex_match_next(-1);" title="find on page">Prev</button>

            <br>
            <a id="searchResult" onclick="onclick_load_search_string_history();" title='load search history.'>search
                result...</a><br>

            

            <table id="Tab_regex_history_lst" border='1' style="float:left;">
                <tbody>
                    <tr>
                        <td>
                            click search results<br>
                            to show history serch<br>                           

                        </td>
                    </tr>
                </tbody>
            </table>

            <table id="Tab_load_vcv_history" border="1" style="float:left;">
                <caption><span id='loads_buttons'>
                        <span>
                </caption>
                <thead></thead>
                <tbody>
                    <tr>
                        <td>
                            Pleas click H button <br>for History.<br>
                            <br>
                            Pleas click ^ button <br>sort by str.<br>

                        </td>
                    </tr>
                </tbody>
            </table>
            <button id="loadhistory" onclick='onclick_load_vcv_history(1);' title='load history sort by time'>h</button>
            <br>
            <br>
            <button id="sort_history_by_vcvID" onclick='onclick_load_vcv_history(0);' title='sort by str'>^</button>

        </div>
    </div>
    <div id="others">
            <table id='tmpsel2ref' border="1" align="left">
                <thead></thead>
                <tbody>
                </tbody>
            </table>

            <table id='refslist' border="1" align="left">
                <!--thead><th>#</th><th>vcv</th><th>refs</th></thead--->
                <tbody>
                    <tr>
                        <td>
                            <a id="blb" ref="https://www.blueletterbible.org/kjv/">blb</a>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <a id="h_g" ref="../../../../../../../___bigdata/unzipped/rel/ham12/hgsbible/hgb/" title='Hebrew_Greek'>h_g</a>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <a id="gtw" ref="https://www.biblegateway.com/passage/?search=" title='biblegateway.com'>gtw</a></caption>
                        </td>
                    </tr>
                </tbody>
            </table>

            <div id="othersx">
        <button id="oBible_indxer">indxer</button>
        <button id="Compare_vcv">Compare_vcv</button>

        <table border="1">
            <thead>
                <tr>
                    <td>#</td>
                    <td>Vol</td>
                    <td>Chp</td>
                    <td>Ver</td>
                </tr>
            </thead>
            <tbody id="StructAna"></tbody>
        </table>
    </div>

        </div>

    

</div>
<hr />
<button id='menuToggler'>-</button>
<span id='oBible'>----</span>

        `;//////backtick for multiple lines. 



    CNST.FnameOfBibleObj =
        ["BBE", "CUVS", "H_G", "KJV", "KJV_Jw", "NIV", "NIV_Jw", "PINYIN", "STUS", "WLVS", "_notes"];

    CNST.BibVolName = {
        "Gen": ['Genesis', '创世纪'],
        "Exo": ['Exodus', '出埃及记'],
        "Lev": ['Leviticus', '利未记'],
        "Num": ['Numbers', '民数记'],
        "Deu": ['Deuteronomy', '申命记'],
        "Jos": ['Joshua', '约书亚记'],
        "Jug": ['Judges', '士师记'],
        "Rut": ['Ruth', '路得记'],
        "1Sa": ['1_Samuel', '撒母耳记上'],
        "2Sa": ['2_Samuel', '撒母耳记下'],
        "1Ki": ['1_Kings', '列王记上'],
        "2Ki": ['2_Kings', '列王记下'],
        "1Ch": ['1_Chronicles', '历代志上'],
        "2Ch": ['2_Chronicles', '历代志下'],
        "Ezr": ['Ezra', '以斯拉记'],
        "Neh": ['Nehemiah', '尼希米记'],
        "Est": ['Esther', '以斯帖记'],
        "Job": ['Job', '约伯记'],
        "Psm": ['Psalm', '诗篇'],
        "Pro": ['Proverbs', '箴言'],
        "Ecc": ['Ecclesiastes', '传道书'],
        "Son": ['SongOfSolomon', '雅歌'],
        "Isa": ['Isaiah', '以赛亚书'],
        "Jer": ['Jeremiah', '耶利米书'],
        "Lam": ['Lamentations', '耶利米哀歌'],
        "Eze": ['Ezekiel', '以西结书'],
        "Dan": ['Daniel', '但以理书'],
        "Hos": ['Hosea', '何西阿书'],
        "Joe": ['Joel', '约珥书'],
        "Amo": ['Amos', '阿摩司书'],
        "Oba": ['Obadiah', '俄巴底亚书'],
        "Jon": ['Jonah', '约拿书'],
        "Mic": ['Micah', '弥迦书'],
        "Nah": ['Nahum', '那鸿书'],
        "Hab": ['Habakkuk', '哈巴谷书'],
        "Zep": ['Zephaniah', '西番雅书'],
        "Hag": ['Haggai', '哈该书'],
        "Zec": ['Zechariah', '撒迦利亚'],
        "Mal": ['Malachi', '玛拉基书'],
        "Mat": ['Matthew', '马太福音'],
        "Mak": ['Mark', '马可福音'],
        "Luk": ['Luke', '路加福音'],
        "Jhn": ['John', '约翰福音'],
        "Act": ['Acts', '使徒行传'],
        "Rom": ['Romans', '罗马书'],
        "1Co": ['1_Corinthians', '哥林多前书'],
        "2Co": ['2_Corinthians', '哥林多后书'],
        "Gal": ['Galatians', '加拉太书'],
        "Eph": ['Ephesians', '以弗所书'],
        "Phl": ['Philippians', '腓立比书'],
        "Col": ['Colossians', '歌罗西书'],
        "1Ts": ['1_Thessalonians', '帖撒罗尼迦前书'],
        "2Ts": ['2_Thessalonians', '帖撒罗尼迦后书'],
        "1Ti": ['1_Timothy', '提摩太前书'],
        "2Ti": ['2_Timothy', '提摩太后书'],
        "Tit": ['Titus', '提多书'],
        "Phm": ['Philemon', '腓利门书'],
        "Heb": ['Hebrews', '希伯来书'],
        "Jas": ['James', '雅各书'],
        "1Pe": ['1_Peter', '彼得前书'],
        "2Pe": ['2_Peter', '彼得后书'],
        "1Jn": ['1_John', '约翰一书'],
        "2Jn": ['2_John', '约翰二书'],
        "3Jn": ['3_John', '约翰三书'],
        "Jud": ['Jude', '犹大书'],
        "Rev": ['Revelation', '启示录'],
    };
    CNST.BlueLetterBibleCode = {
        "Gen": "Gen",
        "Exo": "Exo",
        "Lev": "Lev",
        "Num": "Num",
        "Deu": "Deu",
        "Jos": "Jos",
        "Jug": "Jug",
        "Rut": "Rut",
        "1Sa": "1Sa",
        "2Sa": "2Sa",
        "1Ki": "1Ki",
        "2Ki": "2Ki",
        "1Ch": "1Ch",
        "2Ch": "2Ch",
        "Ezr": "Ezr",
        "Neh": "Neh",
        "Est": "Est",
        "Job": "Job",
        "Psm": "Psa",//
        "Pro": "Pro",
        "Ecc": "Ecc",
        "Son": "Son",
        "Isa": "Isa",
        "Jer": "Jer",
        "Lam": "Lam",
        "Eze": "Eze",
        "Dan": "Dan",
        "Hos": "Hos",
        "Joe": "Joe",
        "Amo": "Amo",
        "Oba": "Oba",
        "Jon": "Jon",
        "Mic": "Mic",
        "Nah": "Nah",
        "Hab": "Hab",
        "Zep": "Zep",
        "Hag": "Hag",
        "Zec": "Zec",
        "Mal": "Mal",
        "Mat": "Mat",
        "Mak": "Mak",
        "Luk": "Luk",
        "Jhn": "Jhn",
        "Act": "Act",
        "Rom": "Rom",
        "1Co": "1Co",
        "2Co": "2Co",
        "Gal": "Gal",
        "Eph": "Eph",
        "Phl": "Phl",
        "Col": "Col",
        "1Ts": "1Ts",
        "2Ts": "2Ts",
        "1Ti": "1Ti",
        "2Ti": "2Ti",
        "Tit": "Tit",
        "Phm": "Phm",
        "Heb": "Heb",
        "Jas": "Jas",
        "1Pe": "1Pe",
        "2Pe": "2Pe",
        "1Jn": "1Jn",
        "2Jn": "2Jn",
        "3Jn": "3Jn",
        "Jud": "Jud",
        "Rev": "Rev",
    };//BookChapterVerseMax
    CNST.BookID2IdxCode = {
        _Gen: ['01', 'h'],
        _Exo: ['02', 'h'],
        _Lev: ['03', 'h'],
        _Num: ['04', 'h'],
        _Deu: ['05', 'h'],
        _Jos: ['06', 'h'],
        _Jug: ['07', 'h'],
        _Rut: ['08', 'h'],
        _1Sa: ['09', 'h'],
        _2Sa: ['10', 'h'],
        _1Ki: ['11', 'h'],
        _2Ki: ['12', 'h'],
        _1Ch: ['13', 'h'],
        _2Ch: ['14', 'h'],
        _Ezr: ['15', 'h'],
        _Neh: ['16', 'h'],
        _Est: ['17', 'h'],
        _Job: ['18', 'h'],
        _Psm: ['19', 'h'],
        _Pro: ['20', 'h'],
        _Ecc: ['21', 'h'],
        _Son: ['22', 'h'],
        _Isa: ['23', 'h'],
        _Jer: ['24', 'h'],
        _Lam: ['25', 'h'],
        _Eze: ['26', 'h'],
        _Dan: ['27', 'h'],
        _Hos: ['28', 'h'],
        _Joe: ['29', 'h'],
        _Amo: ['30', 'h'],
        _Oba: ['31', 'h'],
        _Jon: ['32', 'h'],
        _Mic: ['33', 'h'],
        _Nah: ['34', 'h'],
        _Hab: ['35', 'h'],
        _Zep: ['36', 'h'],
        _Hag: ['37', 'h'],
        _Zec: ['38', 'h'],
        _Mal: ['39', 'h'],
        _Mat: ['40', 'b'],
        _Mak: ['41', 'b'],
        _Luk: ['42', 'b'],
        _Jhn: ['43', 'b'],
        _Act: ['44', 'b'],
        _Rom: ['45', 'b'],
        _1Co: ['46', 'b'],
        _2Co: ['47', 'b'],
        _Gal: ['48', 'b'],
        _Eph: ['49', 'b'],
        _Phl: ['50', 'b'],
        _Col: ['51', 'b'],
        _1Ts: ['52', 'b'],
        _2Ts: ['53', 'b'],
        _1Ti: ['54', 'b'],
        _2Ti: ['55', 'b'],
        _Tit: ['56', 'b'],
        _Phm: ['57', 'b'],
        _Heb: ['58', 'b'],
        _Jas: ['59', 'b'],
        _1Pe: ['60', 'b'],
        _2Pe: ['61', 'b'],
        _1Jn: ['62', 'b'],
        _2Jn: ['63', 'b'],
        _3Jn: ['64', 'b'],
        _Jud: ['65', 'b'],
        _Rev: ['66', 'b'],
    };
    CNST.OT_Vols_Ary = [
        "Gen",
        "Exo",
        "Lev",
        "Num",
        "Deu",
        "Jos",
        "Jug",
        "Rut",
        "1Sa",
        "2Sa",
        "1Ki",
        "2Ki",
        "1Ch",
        "2Ch",
        "Ezr",
        "Neh",
        "Est",
        "Job",
        "Psm",
        "Pro",
        "Ecc",
        "Son",
        "Isa",
        "Jer",
        "Lam",
        "Eze",
        "Dan",
        "Hos",
        "Joe",
        "Amo",
        "Oba",
        "Jon",
        "Mic",
        "Nah",
        "Hab",
        "Zep",
        "Hag",
        "Zec",
        "Mal"
    ];
    CNST.NT_Vols_Ary = [
        "Mat",
        "Mak",
        "Luk",
        "Jhn",
        "Act",
        "Rom",
        "1Co",
        "2Co",
        "Gal",
        "Eph",
        "Phl",
        "Col",
        "1Ts",
        "2Ts",
        "1Ti",
        "2Ti",
        "Tit",
        "Phm",
        "Heb",
        "Jas",
        "1Pe",
        "2Pe",
        "1Jn",
        "2Jn",
        "3Jn",
        "Jud",
        "Rev"
    ];
    CNST.Cat2VolArr = {
        "Moses-ot": ["Gen", "Exo", "Lev", "Num", "Deu"],
        "History": ["Jos", "Jug", "Rut", "1Sa", "2Sa", "1Ki", "2Ki", "1Ch", "2Ch", "Ezr", "Neh", "Est"],
        "Literature": ["Job", "Psm", "Pro", "Ecc", "Son"],
        "MajorPr": ["Isa", "Jer", "Lam", "Eze", "Dan"],
        "MinorPr": ["Joe", "Amo", "Oba", "Jon", "Mic", "Nah", "Hab", "Zep", "Hag", "Zec", "Mal"],
        "Gospel-nt": ["Mat", "Mak", "Luk", "Jhn"],
        "Paulines": ["Rom", "1Co", "2Co", "Gal", "Eph", "Phl", "Col", "1Ts", "2Ts", "1Ti", "2Ti", "Tit", "Phm"],
        "Epistles": ["Heb", "Jas", "1Pe", "2Pe", "1Jn", "2Jn", "3Jn", "Jud"]
    };
    var BookJsFlavor = {
        OTNT: ['#510000', 'wholistic Bible', '圣经全书'],
        OT: ['#001040', 'O.T.', '旧约全书'],
        Moses: ['#002E63', 'Moses', '摩西五经'],
        History: ['#002E63', 'History', '历史'],
        Literature: ['#002E63', 'Literature', '文学'],
        Major_Prophets: ['#002E63', 'Major_Prophets', '大先知'],
        Minor_Prophets: ['#002E63', 'Minor_Prophets', '小先知'],
        NT: ['#4053A9', 'N.T.', '新约全书'],
        Gospels: ['#003399', 'Gospels', '四福音书'],
        HisSayings: ['#003399', 'HisSayings', '耶稣话语'],
        Pauls: ['#003399', 'Pauls', '保罗书信'],
        Other_Epistles: ['#003399', 'OtherEpistles', '其他书信'],
    };

</script>
<html>

<head>
    <base target="_blank" />
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">


    <link rel="stylesheet" hrefxxxxxxxxx="./BibleStudyNotePad.css?v=2020dec21b">
    </link>

    <!-------------------------------------------->
    <!---- Insert this before scripts import; then restor back later -->
    <script>//if (typeof module === 'object') { window.module = module; module = undefined; }</script>

    <!-------------- jq --------------------->
    <script ____src="./doc_files/jquery-2_1_3.min.js"></script>
    <script src="https://wdingbox.github.io/ham12/jq/jquery-2_1_3.min.js"></script>
    <script xxxxxxxsrc="http://localhost:7878/assets/ckeditor/adapters/jq/jquery-2_1_3.min.js"
        note="selfseversite"></script>
    <!-------------- ckeditor only--------------------->
    <script src="../../../assets/ckeditor/ckeditor.js"></script>
    <script src="../../../assets/ckeditor/samples/old/sample.js"></script>
    <link href="../../../assets/ckeditor/samples/old/sample.css" rel="stylesheet">


    <script ___src="http://localhost:7878/assets/ckeditor/ckeditor.js" note="selfseversite"></script>
    <script ___src="http://localhost:7878/assets/ckeditor/samples/old/sample.js"></script>
    <!-------------------------------------------->
    <!----- Insert this line after script imports -->
    <script>//if (window.module) module = window.module;</script>
    <script language="javascript" src="./BibleStudyNotePad.js?v=20.12.4"></script>
    <!-------------------------------------------->
    <style>
        body,
        table {
            padding: 10px 10px 10px 10px;
            margin: 10px 10px 10px 10px;
            /*font-size:xx-large;*/
        }


        .white_space_nowrap {
            white-space: nowrap;
        }

        textarea {
            width: 100%;
        }

        .hili {
            background-color: red;
        }

        .help_label {
            float: right;
        }

        .helpinfo {
            display: none;
            margin-left: 50px;
        }
    </style>
</head>

<body>



    <form action="" method="post">
        <div>
            Repository <a class="help_label" onclick="$('.helpinfo.Repository').toggle('slow');">help?</a>
        </div>
        <div class="helpinfo Repository" id="help_Repository">
            <p>
                To get a repository:
            </p>
            <ol>
                <li>
                    register an account in <a href="https://github.com/">github.com</a>
                </li>
                <li>
                    create a New repository (public is recommended)
                </li>
                <li>
                    copy reposistory HTTPS url to paste into following input box.
                </li>
            </ol>
        </div>
        <textarea id="repository" value="https://github.com/wdingbox/bible_user_williamd.git"></textarea>
        <label for="editor1">
            Password (optional: for data saving in your repository only) <a class="help_label"
                onclick="$('.helpinfo.Password').toggle('slow');">help?</a>
        </label>
        <div class="helpinfo Password">
            <a>
                The passwod is required for
            </a>
            <ol>
                <li>
                    push data into repository, or
                </li>
                <li>
                    pull data from private repository.
                </li>
            </ol>
            <a>
                The password can be used right before you manually push data into the repository.
            </a>
        </div>
        <input id="passcode" value=""></input>
    </form>
    <p>
        <button onclick="repo_create();">Create</button>
        <button onclick="repo_destroy();">Destroy</button>
        <button onclick="repo_pushback();">Push</button>
        <button onclick="repo_status();">Status</button>
        <button onclick="Okey_use_this();">OK,use this</button>
        <br>
        <button onclick="repo_histroy();">histroy</button>
        <button onclick="RemoveInHistory();">RemoveInHistory</button>
    </p>



    <div id="footer">
        <hr>
        <textarea id="txtarea" rows="25"></textarea>
    </div>





    <script>
        function Okey_use_this(Jsonpster) {
            window.opener.postMessage(Jsonpster.inp.usr, '*');
        }
        function repo_create() {
            Jsonpster.inp.usr = MyStorage.Repositories().add_fr_ui()
            Jsonpster.api = RestApi.ApiUsrReposData_create.str
            dbg_pster()
            Jsonpster.Run(function (ret) {
                
                dbg_pster(ret)
            })
        }
        function repo_destroy() {
            if(!confirm("All data will be destroyed.")) return
            Jsonpster.inp.usr = MyStorage.Repositories().add_fr_ui()
            Jsonpster.api = RestApi.ApiUsrReposData_destroy.str
            dbg_pster()
            Jsonpster.Run(function (ret) {
                
                dbg_pster(ret)
            })
        }
        function repo_status() {
            Jsonpster.inp.usr = MyStorage.Repositories().add_fr_ui()
            Jsonpster.api = RestApi.ApiUsrReposData_status.str
            dbg_pster()
            Jsonpster.Run(function (ret) {
                
                dbg_pster(ret)
                Uti.Msg("Status:", ret.out)
            })
        }
        function repo_pushback() {
            if(!confirm("push data into repository")) return
            Jsonpster.inp.usr = MyStorage.Repositories().add_fr_ui()
            Jsonpster.api = RestApi.ApiUsrReposData_git_push.str
            dbg_pster()
            Jsonpster.Run(function (ret) {
                
                dbg_pster(ret)
                Uti.Msg("Status:", ret.out)
            })
        }
        function repo_histroy() {
            var ar = MyStorage.Repositories().get()
            var stb = "<table id='account_history_table' border='1'><caption>History</caption>"
            for (var i = 0; i < ar.length; i++) {
                stb += `<tr><td>${i}</td>`
                Object.keys(ar[i]).forEach(function (key) {
                    stb += `<td>${ar[i][key]}</td>`
                })
                stb += "</tr>"
            }
            stb += "</table>"
            $("#footer").find("#account_history_table").remove()
            $("#footer").prepend(stb).find("tr").bind("click", function () {
                var rep = $(this).find("td:eq(1)").text()
                var pws = $(this).find("td:eq(2)").text()
                var pname = $("#repository").val(rep)
                var pcode = $("#passcode").val(pws)
                $("tr.hili").removeClass("hili")
                $(this).addClass("hili")

            })
        }
        function RemoveInHistory() {
            var rep = $(".hili").find("td:eq(1)").text()
            var pws = $(".hili").find("td:eq(2)").text()

            var ret = confirm("remove in history?\n" + rep + "\n" + pws, "reposit")
            if (ret) {
                MyStorage.Repositories().del({ repository: rep, passcode: pws })
                $(".hili").remove()
            }
        }
    </script>
</body>

</html>
<script>
    Uti.Jsonpster_crossloader()
    function dbg_pster(dat) {
        var ss = dat
        if ("object" === typeof dat) {
            var ss = "ret=" + JSON.stringify(dat, null, 4)
        }
        ss += "\n\n\nJsonpster = " + JSON.stringify(Jsonpster, null, 4)
        ss += "\n\n\nRestApi=" + JSON.stringify(RestApi, null, 4)
        $("#txtarea").val(ss)
    }
    setTimeout(() => {
        if (undefined === Jsonpster) {
            alert("Jsonpster not exist.")
        }
        else {
            $("title").text("acct")
            dbg_pster()
        }
        //g_msg.pop(`initial load file: ${ret.name}, size:${data.length}(B)`).m_len = data.length
    }, 1000)
</script>
<script>
    $(function () {
        //init_CKEditor()
        //init_ui_cmd()
        //load_page_by_parent_storage()


    })
</script>
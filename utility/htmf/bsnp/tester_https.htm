<HTML>

<HEAD>
    <TITLE>bsnp</TITLE>
    <base target="_blank" />
    <META http-equiv="Content-Type" content="text/html;" charset="UTF-8">
    <META name="viewport" content="width=device-witdh, initial-scale=1, maximum-scale=1, user-scale=0">


    <link rel="stylesheet" href="./BibleStudyNotePad.css?v=2021-01-04bb">
    </link>


    <script>
        console.log("startime:", (new Date()).toISOString())
    </script>
    <!--------->
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/BBE.json.js"></script>
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/CUVS.json.js"></script>
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/CUVsen.json.js"></script>
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/H_G.json.js"></script>
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/KJV.json.js"></script>
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/NIV.json.js"></script>
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/CUVpy.json.js"></script>
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/STUS.json.js"></script>
    <script language="javascript" xxxxsrc="../../../jsdb/jsBibleStruct/WLVS.json.js"></script>
    <script xxxxxxxxsrc="https://wdingbox.github.io/ham12/jq/jquery-2_1_3.min.js"></script>
    <script xxxxxxxxsrc="https://wdingbox.github.io/ham12/jq/jsencrypt.min.js"></script>
    <!------ api ---->
    <script xxxxsrc="http://localhost:7778/Jsonpster/" xsrc="http://52.87.154.78:7778/Jsonpster/"></script>
    <script xxxxsrc="http://localhost:7778/Jsonpster/" xsrc="http://104.188.182.128:7778/Jsonpster/"></script>
    <script xxxxsrc="http://localhost:7778/Jsonpster/" xsrc="http://localhost:7778/Jsonpster/"></script>

    <script language="javascript"
        xxxxxsrc="../../../../bible_obj_lib/jsdb/jsBibleStruct/All_Max_struct_json.js"></script>
    <!----------------------------------------------------------------------------->
    <!----------------------------------------------------------------------------->






    <script language="javascript"
        src="https://cdnjs.cloudflare.com/ajax/libs/jsencrypt/2.3.1/jsencrypt.min.js"></script>

    <script language="javascript" src="../../htmjs/jq/jquery.js"></script>
    <script language="javascript" src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <!---------->
    <script language="javascript" src="../../htmjs/jq/table_Indexer.js"></script>
    <script language="javascript" src="../../htmjs/jq/jquery.tablesorter.js"></script>

    <!----------------------------------------------------------------------------->
    <script language="javascript"
        src="https://wdingbox.github.io/bible_obj_lib/jsdb/jsBibleStruct/All_Max_struct_json.js"></script>

    <!----------------------------------------------------------------------------->
    <script language="javascript" src="./BibleStudyNotePad.js?v=2021.01.20j"></script>


    <style>
    </style>



</HEAD>

<BODY onbeforeunload="return 'leave?';">

    <button id="test" onclick="chek()">sign-in</button>
    <button id="test" onclick="read()">read</button>

</BODY>

</HTML>

<script language="javascript">

    var CUID = "CUID"+(new Date()).getTime() + Math.random()
    console.log(window.location);
    var e = document.createElement("script");
    e.src = "https://34.227.20.213:7775/Jsonpster/?inp="+CUID
    //document.body.appendChild(e); 


    function chek() {
        console.log(Jsonpster)
        Jsonpster2 = Jsonpster
        //Jsonpster2.inp.CUID = CUID
        Jsonpster2.api = "UsrReposPost_Signin"
        Jsonpster2.inp.usr = { repopath: "https://github.com/bsnp21/pub_wd01.git", passcode: "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", repodesc: "des" }
        Jsonpster2.RunAjaxPost_Signin(function(ret){
            console.log(ret)
            Jsonpster2.inp.SSID = ret.out.state.SSID
            console.log("SSID=", ret.out.state.SSID)
        })
    }
    function read(){
        Jsonpster2.inp.par = { fnames: ["NIV"], bibOj: {Gen:{"1":{"1":""}}} }
        Jsonpster2.api = RestApi.ApiBibleObj_load_by_bibOj
        
        console.log("Jsonpster:", Jsonpster2)

        Jsonpster2.RunAjaxPost_Signed(function (ret) {
            console.log(ret)
        })
    }

    $(document).ready(function () {



        //$.post("https://34.227.20.213:7775/", function (data) {
        //    console.log(data)
        //});

        //setTimeout(function(){
        //    console.log(Jsonpster)
        //},3000)



        test()
        test_1()





    });/////////////
    function test_1() {
        $.ajax({
            type: "GET",
            url: "https://34.227.20.213:7775/Jsonpster/?inp=",

            data: {},
            crossDomain: true,
            success: function (dat, err) {
                console.log(Jsonpster)
                //var p1 = 1 + dat.indexOf("="), p2 = dat.indexOf("var RestApi = {")
                //var srt = dat.substring(p1, p2)
                //var srt = srt.replace(/[\"]/g, "\\'")

                //console.log(srt)
                //var obj = JSON.parse(srt)
                console.log(err)
            },
            dataType: "script",

            //no effect
            xhrFields: {
                withCredentials: false
            },
            //no effect
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },

        }).done(function (data) {
            console.log("done");
        }).fail(function (xhr, textStatus, errorThrown) {
            alert(xhr.responseText);
            alert(textStatus);
        });;
    }

    function test() {
        $.ajax({
            type: "POST",
            url: "https://34.227.20.213:7775/test_https_work",

            data: {},
            crossDomain: true,
            success: function (dat, err) {
                console.log(dat)
                console.log(err)
            },
            dataType: "text",

            //no effect
            xhrFields: {
                withCredentials: false
            },
            //no effect
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },

        }).done(function (data) {
            console.log("done");
        }).fail(function (xhr, textStatus, errorThrown) {
            alert(xhr.responseText);
            alert(textStatus);
        });;
    }





    var Jsonpster2 = {
        api: "",
        inp: { CUID: null, usr: null, SSID: null, par: null, aux: null },
        SvrUrl: "https://34.227.20.213:7775/",
        pkb64: "",
        getUrl: function () {
            return this.SvrUrl + this.api
        },
        onBeforeRun: function () {
        },
        onAfterRun: function () {
        },

        onSignin: function () {
            this.inp.SSID = null
            if (!this.inp.CUID) return alert("missing CUID.")
            if ('object' != typeof this.inp.usr) return alert("missing usr.")
            if (this.pkb64.length === 0) return alert("no pubkey. Please load page again.")

            var usrs = JSON.stringify(this.inp.usr)
            if (usrs.length > 500) { return alert("max 4096-bit rsa: 501B. len=" + usrs.length) }

            //alert(this.inp.usr)
            var encrypt = new JSEncrypt();
            encrypt.setPublicKey(atob(this.pkb64));
            this.inp.cipherusrs = encrypt.encrypt(usrs);
            this.inp.usr = null

            console.log(this.inp.cipherusrs.length)
            console.log(this.inp)
            console.log("Jsonpster")
            console.log(Jsonpster)
        },
        onSigned: function () {
            if (this.inp.SSID === null) return alert("lost inp.SSID")
            //if (!this.inp.par) return alert("miissing inp.par="+this.inp.par)
            if (this.inp.usr !== null) return alert("forbidden inp.usr")
        },

        RunAjaxPost_Signed: function (cbf) {
            this.onSigned()
            this.RunAjax_PostTxt(cbf)
        },
        RunAjaxPost_Signin: function (cbf) {
            this.onSignin()
            this.RunAjax_PostTxt(cbf)
        },
        RunAjax_PostTxt: function (cbf) {
            this.onBeforeRun()
            if (!this.api) return alert("ErrApi=" + this.api)
            var surl = this.getUrl()
            this.inp.api = this.api
            $.ajax({
                type: "POST",
                dataType: 'text',
                contentType: "application/json; charset=utf-8",
                url: surl,
                data: JSON.stringify(this.inp),
                username: 'user',
                password: 'pass',
                crossDomain: true,
                xhrFields: {
                    withCredentials: false
                }
            })
                .success(function (data) {
                    //console.log("success",data);
                    //cbf(JSON.parse(data))
                })
                .done(function (data) {
                    var ret = JSON.parse(data)
                    Jsonpster.onAfterRun(ret)
                    cbf(ret)
                    Jsonpster.api = Jsonpster.inp.par = Jsonpster.inp.usr = null;
                })
                .fail(function (xhr, textStatus, errorThrown) {
                    console.log("surl", surl)
                    alert("xhr.responseText=" + xhr.responseText + ",textStatus=" + textStatus);
                    //alert("textStatus="+textStatus);
                });
        },
    };
    var RestApi = {
        "Jsonpster": "Jsonpster",
        "ApiBibleObj_search_txt": "ApiBibleObj_search_txt",
        "ApiBibleObj_load_by_bibOj": "ApiBibleObj_load_by_bibOj",
        "ApiBibleObj_write_Usr_BkcChpVrs_txt": "ApiBibleObj_write_Usr_BkcChpVrs_txt",
        "ApiBibleObj_read_crossnetwork_BkcChpVrs_txt": "ApiBibleObj_read_crossnetwork_BkcChpVrs_txt",
        "ApiUsrDat_save": "ApiUsrDat_save",
        "ApiUsrDat_load": "ApiUsrDat_load",
        "________ApiUsrReposData_create___test_only": "________ApiUsrReposData_create___test_only",
        "UsrReposPost_Signin": "UsrReposPost_Signin",
        "ApiUsrReposData_destroy": "ApiUsrReposData_destroy",
        "ApiUsrReposData_status": "ApiUsrReposData_status",
        "ApiUsrReposData_git_push": "ApiUsrReposData_git_push",
        "ApiUsrReposData_git_pull": "ApiUsrReposData_git_pull",
        "ApiUsr_Cmdline_Exec": "ApiUsr_Cmdline_Exec",
        "test_https_work": "test_https_work"
    }







</script>